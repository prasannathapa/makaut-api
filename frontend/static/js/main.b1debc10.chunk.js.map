{"version":3,"sources":["components/Drawer/drawer.jsx","components/Drawer/Main.jsx","components/Drawer/icons/reportcard.svg","components/Drawer/icons/college.svg","components/Drawer/icons/ai.svg","components/Drawer/icons/compare.svg","components/Drawer/icons/server.svg","components/Drawer/icons/faq.svg","components/Drawer/icons/home.svg","components/Drawer/icons/book.svg","components/Drawer/icons/search.svg","components/SearchBox/icon/search.svg","components/Typer/Typer.jsx","components/SearchBox/SearchBox.jsx","components/ToggleButton/sync.svg","components/ToggleButton/done.svg","Database/db.jsx","components/GradeCard/GradeCard.jsx","components/MultiReport/MultiReport.jsx","components/Ratings/Ratings.jsx","components/Student/Student.jsx","components/Home/result-prev.png","components/Home/sub-res.png","components/Home/distribution.png","components/Home/student-comp.png","components/Home/multi-prev.png","components/Home/college-analytics.png","components/Home/sub-analytics.png","components/Home/Home.jsx","components/UnderConstruction.jsx","components/SearchList/icon/delete.svg","components/SearchList/SearchList.jsx","components/CollegeReport/icons/info.svg","components/CollegeReport/CollegeReport.jsx","components/StudentCompare/StudentCompare.jsx","components/SubjectReport/SubjectReport.jsx","components/Settings/Settings.jsx","App.js","reportWebVitals.js","index.js"],"names":["Drawer","props","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","menuItemClick","e","data","currentTarget","getAttribute","navItemClickListner","mStyle","width","open","isMobile","backgroundColor","backdropFilter","selected","drawerItems","list","map","item","index","className","Number","activeId","onClick","item-id","src","alt","Fragment","style","color","options","height","play","Main","marginLeft","start","end","animate","translate","console","log","id","toggler","menuAnim","position","speed","segments","children","transform","transition","padding","TYPING_SPEED","Typer","state","text","isDeleting","loopNum","typingSpeed","handleType","dataText","i","length","fullText","substring","Math","min","maxLength","setState","setTimeout","_mounted","_timer","this","clearTimeout","letterSpacing","spacing","paddingRight","Component","SearchBox","inputFocus","bind","inputBlur","handleChange","event","searchTextUpdate","target","value","searchState","title","searchIcon","type","onFocus","onBlur","onChange","active","colorHint","colleges","100","103","104","105","106","107","108","109","110","111","112","113","115","116","117","118","119","120","121","122","123","124","125","126","127","129","130","131","132","133","134","136","137","139","142","143","144","145","148","149","150","152","153","154","155","156","158","159","160","161","163","164","165","168","169","170","173","174","175","176","177","178","179","180","182","183","185","186","187","188","189","192","193","194","195","198","199","200","201","202","206","208","209","210","211","212","213","214","215","216","220","221","226","229","230","234","235","236","238","240","241","242","243","244","246","250","252","253","255","257","259","260","261","263","264","265","266","269","271","273","275","276","277","278","279","281","286","287","288","289","290","291","292","294","296","297","298","299","300","301","304","306","309","310","311","312","313","314","318","320","321","322","323","324","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","358","359","361","362","363","364","365","366","376","course_code","HTTP_METHOD","SERVER1","SERVER2","SELECTED_SERVER","API_HOST","floor","random","savedServer","localStorage","getItem","setHost","server","colors","subCodes","sems","GradeCard","_isMounted","showAdditionalInfo","showModal","semData","showInfo","chartState","chartData","stopPropagation","info","feild","s","analData","obj1","obj2","subCode","myCGPA","parseFloat","CGPA","studentBelowMe","totalStudent","analyticsArray","count","percentile","toFixed","semNo","push","subName","subjectName","percentileCallback","arr","obj","toString","parseInt","prevProps","prevState","singleSem","fetch","roll","then","res","json","result","getPercentile","error","items","marksTotal","fullMarks","avg","semcount","Object","keys","key","semObj","weightage","maxWidth","ResponsiveContainer","minHeight","maxHeight","BarChart","processAndSort","CartesianGrid","strokeDasharray","XAxis","dataKey","label","dx","dy","YAxis","angle","Tooltip","cursor","fill","Bar","subIndex","Cell","textAlign","fontFamily","updateIcon","includes","semtotalStudent","semfullMarks","MiniPreview","subKey","borderColor","borderRadius","margin","fontWeight","paddingBottom","marginTop","fontSize","MultiReport","boderStyle","searchTextUpdate1","searchTextUpdate2","semsQueryHandler","getRangeResult","sortFilter","sortProp","textFilter","savedState","JSON","parse","input","text1","text2","fetchState","semResult","sortBy","sort","toast","TYPE","DARK","jsonObj","a","b","reduce","prop","ar","results","br","x","y","sR","sortedObj","sems_cgpa","values","acc","v","xa","name","setItem","stringify","semList","SUCCESS","INFO","sortSems","ERROR","update","isActive","apiState","grade","containText","filterArray","split","filter","toLocaleLowerCase","search","replace","resultState","semsBtn","checkAnySemList","tickIcon","display","border","minWidth","checkTextFilter","RatingBar","size","flexDirection","val","Student","getSingleResult","getPercentileCallback","semsState","progressChartData","rating","topSubjects","radarGraph","semCount","progressArray","analyticsResult","itr","prcntile","myState","isNaN","STATE","max","students","radar","assign","registration","RadarChart","cx","cy","outerRadius","PolarGrid","PolarAngleAxis","PolarRadiusAxis","formatter","k","payload","Radar","stroke","fillOpacity","LineChart","tick","Legend","Line","activeDot","r","ComposedChart","zoomAndPan","sortCGPAAnalytics","ReferenceLine","strokeWidth","Label","Area","connectNulls","Brush","collegeName","Home","href","resultPreviewImg","subPreviewImg","distImg","multiRepImg","studentComp","collegeAnalytiycs","subAnalytiycs","NotImplemented","alignItems","SearchList","listItemClicked","internalList","selectedList","numberOfselection","total","selectedStatus","maxSelection","POSITIVE_INFINITY","ItemClickUpdate","msg","maxLimitReachMsg","entries","filterText","allAlwaysSelected","deleteIcon","hideGradient","CollegeReport","selectYear","selectCourse","getCollegeResult","collegeCode1","collegeCode2","batch","Subject","sem","lowDeviationHighMarks","lowDeviationLowMarks","highDeviationData","lessdata","subjectData","pass","fail","subjectMap","code","standardDeviation","averageCGPA","slice","trim","c","d","studentCount","report","cc1","cc2","data1","generateStandardDeviationReport","selectedYear","selectedCourse","yr","titleMsgSrchBox","RADIAN","PI","renderCustomizedLabel","midAngle","innerRadius","percent","radius","cos","sin","textAnchor","dominantBaseline","COLORS","isCollegeCompare","data2","Height","flex","infoIcon","PieChart","Pie","nameKey","entry","undefined","SHOWING_DATA","offset","StudentCompare","addStudent","getData","mySavedState","studentList","updatedText","splice","cgpa","idx","semesterProgressAnalyticsArray","subjectPercentileAnalyticsArray","nameMap","studentdata","savedStudentList","found","cgpaData","downloadTask","getStudentStats","Promise","all","SubjectPAA","SemesterPAA","arrayOfArrays","endsWith","chunkArray","subArr","stackId","SubjectReport","selectSem","selectedSubject","isSelected","selectedSem","urlencoded","URLSearchParams","append","method","headers","body","college","CGPA_DATA","AVERAGE_CGPA","STANDARD_DEVIATION","Settings","useState","setServer","selectServer","host","setInput","icon","background","onInput","App","isOpen","itemSelected","toggleDrawer","iconHome","iconSearch","iconCard","iconCollege","iconBook","iconCompare","iconAI","iconServer","clear","drawerState","currentState","mainComp","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1debc10.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './drawer.scss';\r\nimport Lottie from 'react-lottie-player';\r\nimport animationData from './icons/headanim.json';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nfunction Drawer(props) {\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: \"xMidYMid slice\"\r\n        }\r\n    };\r\n    function menuItemClick(e) {\r\n        const data = e.currentTarget.getAttribute(\"item-id\")\r\n        props.navItemClickListner(data)\r\n    }\r\n    let mStyle = { width: props.open ? props.width + \"px\" : \"0px\" };\r\n    if (isMobile) {\r\n        mStyle.backgroundColor = \"rgba(245, 245, 245, 0.8)\";\r\n        mStyle.backdropFilter = \"blur(3px)\";\r\n    }\r\n    const selected = isMobile?\"selected-light\":\"selected-dark\"\r\n    const drawerItems = props.list.map((item, index) =>\r\n        <div key={index} className={(index === Number(props.activeId)) ? selected : \"\"} onClick={menuItemClick} item-id={index}>\r\n            <img src={item[1]} alt={item[0]} />\r\n            <p>{item[0]}</p>\r\n        </div>\r\n    );\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"drawer\" style={mStyle}>\r\n                <header>\r\n                    <span style={{ width: props.width, color: isMobile ? 'black' : 'white' }}>Grade Card<br></br>Analyzer</span>\r\n                    <Lottie\r\n                        animationData={animationData}\r\n                        options={defaultOptions}\r\n                        style={{ width: props.width, height: 200}}\r\n                        play={props.open}\r\n                    />\r\n                </header>\r\n                {drawerItems}\r\n                <p> </p>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Drawer;","import { Fragment } from \"react\";\r\nimport Lottie from \"react-lottie-player\";\r\nimport './drawer.scss';\r\nimport menuAnim from './icons/menu.json'\r\nimport { BrowserView, MobileView } from 'react-device-detect';\r\nfunction Main(props) {\r\n\r\n    let mStyle = { marginLeft: props.open ? props.width + \"px\" : \"0px\" }\r\n    let start = 0, end = 17;\r\n    if (!props.open) { start += 16; end += 15 }\r\n    if (!props.animate) { end = start; }\r\n    let translate = \"translate(\" + (0 + (props.open ? props.width : 0)) + \"px,0px)\";\r\n    console.log(\"Main Rendered, anim drawer icon: \" + props.animate);\r\n\r\n    return (\r\n        <Fragment>\r\n            <BrowserView>\r\n                <div className=\"main\" id=\"main\" style={mStyle}>\r\n\r\n                    <div className=\"header\">\r\n                        <Lottie\r\n                            onClick={props.toggler}\r\n                            animationData={menuAnim}\r\n                            style={{ width: 100, height: 100, position: \"fixed\" }}\r\n                            speed={0.8}\r\n                            play={props.animate}\r\n                            loop={false}\r\n                            segments={[start, end]}\r\n                        />\r\n                    </div>\r\n                    {props.children}\r\n\r\n                </div>\r\n            </BrowserView>\r\n            <MobileView>\r\n                <div className=\"main\" id=\"main\">\r\n                    <div className=\"header\" style={{\r\n                        height: '60px', transform: translate, transition: \"0.5s\", position: 'fixed',\r\n                        backgroundColor: \"rgba(245, 245, 245, 0.8)\", backdropFilter: \"blur(3px)\", padding: \"0\"\r\n                    }}>\r\n                        <Lottie\r\n                            onClick={props.toggler}\r\n                            animationData={menuAnim}\r\n                            style={{ position: \"fixed\", width: 100, height: 100, transform: 'translate(-20px,-20px)' }}\r\n                            speed={0.8}\r\n                            play={props.animate}\r\n                            loop={false}\r\n                            segments={[start, end]}\r\n                        />\r\n                    </div>\r\n                    {props.children}\r\n                </div>\r\n            </MobileView>\r\n        </Fragment>\r\n    );\r\n\r\n}\r\nexport default Main;","export default __webpack_public_path__ + \"static/media/reportcard.8c26cfe7.svg\";","export default __webpack_public_path__ + \"static/media/college.9e63f8ef.svg\";","export default __webpack_public_path__ + \"static/media/ai.6e422271.svg\";","export default __webpack_public_path__ + \"static/media/compare.22708b0b.svg\";","export default __webpack_public_path__ + \"static/media/server.762f0fce.svg\";","export default __webpack_public_path__ + \"static/media/faq.92cc8016.svg\";","export default __webpack_public_path__ + \"static/media/home.5246ac90.svg\";","export default __webpack_public_path__ + \"static/media/book.92d7021f.svg\";","export default __webpack_public_path__ + \"static/media/search.7d9b64e2.svg\";","export default __webpack_public_path__ + \"static/media/search.74314731.svg\";","import { Component } from \"react\";\r\nimport './typer.scss'\r\nconst TYPING_SPEED = 180;\r\nconst DELETING_SPEED = 30;\r\n\r\nclass Typer extends Component {\r\n  \r\n  _timer;\r\n  _mounted;\r\n  state = {\r\n    text: '',\r\n    isDeleting: false,\r\n    loopNum: 0,\r\n    typingSpeed: TYPING_SPEED\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._mounted = true;\r\n    this.handleType();\r\n  }\r\n\r\n  handleType = () => {\r\n    const { dataText } = this.props;\r\n    const { isDeleting, loopNum, text, typingSpeed } = this.state;\r\n    const i = loopNum % dataText.length;\r\n    const fullText = dataText[i].substring(0, Math.min(this.props.maxLength||dataText[i].length, dataText[i].length));\r\n\r\n    this.setState({\r\n      text: isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1),\r\n      typingSpeed: isDeleting ? DELETING_SPEED : TYPING_SPEED\r\n    });\r\n\r\n    if (!isDeleting && text === fullText) {     \r\n      setTimeout(() => {if(this._mounted)this.setState({ isDeleting: true })}, 500);   \r\n    } else if (isDeleting && text === '') {\r\n      this.setState({\r\n        isDeleting: false,\r\n        loopNum: loopNum + 1\r\n      });      \r\n    }\r\n\r\n    this._timer = setTimeout(this.handleType, typingSpeed);\r\n  };\r\n  componentWillUnmount(){\r\n    clearTimeout(this._timer);\r\n    this._mounted = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.className} style={{color:this.props.color}}>\r\n        <span style={{letterSpacing:this.props.spacing||0, paddingRight:0}}>{ this.state.text }</span>\r\n        <span id=\"cursor\"></span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Typer;","import { Component } from \"react\";\r\nimport './search.scss';\r\nimport searchIcon from './icon/search.svg';\r\nimport Typer from \"../Typer/Typer\";\r\n\r\nclass SearchBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputFocus = this.inputFocus.bind(this);\r\n        this.inputBlur = this.inputBlur.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = { text: \"\" }\r\n    }\r\n    handleChange(event) {\r\n        this.props.searchTextUpdate(event.target.value);\r\n    }\r\n    inputFocus(e) {\r\n        this.props.searchState(true);\r\n    }\r\n    inputBlur(e) {\r\n        this.props.searchState(false);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"search\">\r\n                {this.props.title && <h3>{this.props.title}</h3>}\r\n                <div className=\"search-box\">\r\n                    <img className=\"search-logo\" alt=\"search icon\" src={searchIcon} />\r\n                    <div className=\"search-text\">\r\n                        <input \r\n                            type={this.props.type || \"text\"}\r\n                            style={{ color: this.props.color, letterSpacing:this.props.spacing}}\r\n                            onFocus={this.inputFocus}\r\n                            onBlur={this.inputBlur}\r\n                            value={this.props.text}\r\n                            onChange={this.handleChange}>\r\n\r\n                        </input>\r\n                        {!(this.props.active || this.props.text !== \"\") &&\r\n                            <Typer className=\"hint\" color={this.props.colorHint} dataText={this.props.dataText} maxLength={this.props.maxLength} spacing={this.props.spacing} />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SearchBox;","export default __webpack_public_path__ + \"static/media/sync.95e3a566.svg\";","export default __webpack_public_path__ + \"static/media/done.ffac1534.svg\";","const colleges = {\r\n    100: \"MAKAUT, WB (In House)\",\r\n    103: \"HALDIA INSTITUTE OF TECHNOLOGY ICARE COMPLEX\",\r\n    104: \"INSTITUTE OF ENGINEERING & MANAGEMENT\",\r\n    105: \"BANKURA UNNAYANI INSTITUTE OF ENGINEERING\",\r\n    106: \"MURSHIDABAD COLLEGE OF ENGINEERING & TECHNOLOGY\",\r\n    107: \"COLLEGE OF ENGINEERING & MANAGEMENT\",\r\n    108: \"ASANSOL ENGINEERING COLLEGE VIVEKANANDA SARANI\",\r\n    109: \"NETAJI SUBHASH ENGINEERING COLLEGE\",\r\n    110: \"GOVT. COLLEGE OF ENGG. & TEXTILE\",\r\n    111: \"GOVT. COLLEGE OF ENGINEERING AND TEXTILE TECHNOLOGY\",\r\n    112: \"GOVERNMENT COLLEGE OF ENGINEERING AND LEATHER TECHNOLOGY\",\r\n    113: \"GOVERNMENT COLLEGE OF ENGINEERING & CERAMIC TECHNOLOGY\",\r\n    115: \"B.P. PODDAR INSTITUTE OF MANAGEMENT & TECHNOLOGY\",\r\n    116: \"MCKV INSTITUTE OF ENGINEERING COLLEGE\",\r\n    117: \"RCC INSTITUTE OF INFORMATION TECHNOLOGY\",\r\n    118: \"BIRBHUM INSTITUTE OF ENGINEERING\",\r\n    119: \"SILIGURI INSTITUTE OF TECHNOLOGY HILL CART ROAD\",\r\n    120: \"DR. B. C. ROY ENGINEERING COLLEGE\",\r\n    121: \"BENGAL INSTITUTE OF TECHNOLOGY TECH TOWN\",\r\n    122: \"ST. THOMAS COLLEGE OF ENGINEERING & TECHNOLOGY\",\r\n    123: \"JIS COLLEGE OF ENGINEERING BLOCK-A\",\r\n    124: \"GUPTA COLLEGE OF TECHNOLOGICAL\",\r\n    125: \"BENGAL COLLEGE OF ENGINEERING & TECHNOLOGY\",\r\n    126: \"HERITAGE INSTITUTE OF TECHNOLOGY\",\r\n    127: \"NARULA INSTITUTE OF TECHNOLOGY\",\r\n    129: \"BHARTIYA VIDYA BHAVAN INSTITUTE\",\r\n    130: \"TECHNO MAIN SALT LAKE\",\r\n    131: \"DUMKAL INSTITUTE OF ENGINEERING\",\r\n    132: \"BHOLANANDA NATIONAL ACADEMY VILLAGE: PANPUR\",\r\n    133: \"GEORGE COLLEGE 136 B. B. GANGULY STREET\",\r\n    134: \"GITARAM INSTITUTE OF MANAGEMENT BERHAMPORE\",\r\n    136: \"ARMY INSTITUTE OF MANAGEMENT JUDGES COURT ROAD OPPOSITE\",\r\n    137: \"INSTITUTE OF BUSINESS MANAGEMENT\",\r\n    139: \"VIDYASAGAR COLLEGE OF OPTOMETRY & VISION SCIENCE\",\r\n    142: \"MEGHNAD SAHA INSTITUTE OF TECHNOLOGY\",\r\n    143: \"GURUNANAK INSTITUTE OF TECHNOLOGY\",\r\n    144: \"NEOTIA INSTITUTE OF TECHNOLOGY\",\r\n    145: \"TECHNO INDIA INSTITUTE OF TECHNOLOGY\",\r\n    148: \"FUTURE INSTITUTE OF ENGINEERING\",\r\n    149: \"NSHM COLLEGE OF MANAGEMENT & TECHNOLOGY\",\r\n    150: \"NOPANY INSTITUTE OF MANAGEMENT\",\r\n    152: \"TECHNO INDIA (HOOGHLY CAMPUS) DHARAMPUR SANTINIKATAN\",\r\n    153: \"SYAMAPRASAD INST. OF TECH. & MANAGEMENT\",\r\n    154: \"DINABANDHU ANDREWS INSTITUTE OF TECHNOLOGY & MANAGEMENT\",\r\n    155: \"DURGAPUR INSTITUTE OF ADVANCED TECHNOLOGY & MANAGEMENT\",\r\n    156: \"PAILAN COLLEGE OF MANAGEMENT & TECHNOLOGY [B.TECH DIVISION]\",\r\n    158: \"MALLABHUM INSTITUTE OF TECHNOLOGY\",\r\n    159: \"CALCUTTA INSTITUTE OF PHARMACEUTICAL TECHNOLOGY & ALLIED HEALTH SCIENCES\",\r\n    160: \"NATIONAL INSTITUTE OF TECHNICAL TEACHERSâ€™ TRAINING & RESEARCH\",\r\n    161: \"PARAMEDICAL COLLEGE\",\r\n    163: \"BENGAL INSTITUTE OF TECHNOLOGY\",\r\n    164: \"GEORGE COLLEGE OF MANAGEMENT AND SCIENCE\",\r\n    165: \"CALCUTTA INSTITUTE OF ENGINEERING\",\r\n    168: \"SAROJ MOHAN INSTITUTE OF TECHNOLOGY\",\r\n    169: \"ACADEMY OF TECHNOLOGY G.T. ROAD\",\r\n    170: \"IMPS COLLEGE OF ENGINEERING & TECHNOLOGY\",\r\n    173: \"KINGSTON SCHOOL OF MANAGEMENT AND SCIENCE\",\r\n    174: \"NETAJI SUBHAS CHANDRA BOSEINSTITUTE OF PHARMACY\",\r\n    175: \"HALDIA INSTITUTE OF MANAGEMENT P.O. HATIBERIA\",\r\n    176: \"HOOGHLY ENGINEERING & TECHNOLOGY COLLEGE\",\r\n    177: \"CALCUTTA INSTITUTE OF TECHNOLOGY\",\r\n    178: \"INTERNATIONAL INSTITUTE OF MANAGEMENT SCIENCES\",\r\n    179: \"HALDIA INSTITUTE OF MARITIME\",\r\n    180: \"NIPS SCHOOL OF HOTEL MANAGEMENT\",\r\n    182: \"INSTITUTE OF SCIENCE AND TECHNOLOGY\",\r\n    183: \"EASTERN INSTITUTE FOR INTEGRATED\",\r\n    185: \"GURUNANAK INSTITUTE OF HOTEL MANAGEMENT\",\r\n    186: \"GURU NANAK INSTITUTE OF PHARMACEUTICAL SCIENCE & TECHNOLOGY\",\r\n    187: \"TECHNO INTERNATIONAL NEW TOWN MEGA CITY\",\r\n    188: \"TECHNO COLLEGE HOOGHLY\",\r\n    189: \"DR. B. C. ROY COLLEGE OF PHARMACY\",\r\n    192: \"GLOBAL INSTITUTE OF SCIENCE & TECHNOLOGY\",\r\n    193: \"BENGAL SCHOOL OF TECHNOLOGY SUGANDHA\",\r\n    194: \"INSTITUTE OF MANAGEMENT STUDY 93 MUKUNDAPUR MAIN ROAD\",\r\n    195: \"THE CALCUTTA ANGLO GUJARATI\",\r\n    198: \"ADVANCED INFORMATION & MANAGEMENT STUDIES\",\r\n    199: \"DOOARS ACADEMY OF TECHNOLOGY\",\r\n    200: \"GOLDEN REGENCY INSTITUTE OF DEBHOG\",\r\n    201: \"BCDA COLLEGE OF PHARMACY & TECHNOLOGY\",\r\n    202: \"KOTIBARSHA INSTITUTE OF TECHNOLOGY AND MANAGEMENT\",\r\n    206: \"SEACOM ENGINEERING COLLEGE JALADHULAGORI SANKRAIL\",\r\n    208: \"BHARAT TECHNOLOGY JADURBERIA\",\r\n    209: \"DREAM INSTITUTE OF TECHNOLOGY\",\r\n    210: \"INSTITUTE OF GENETIC ENGINEERING THAKURHAT ROAD\",\r\n    211: \"POST GRADUATE INSTITUTE OF HOSPITAL ADMINISTRATION\",\r\n    212: \"TAMRALIPTA INSTITUTE OF MANAGEMENT & TECHNOLOGY\",\r\n    213: \"THE HERITAGE ACADEMY CHOWBAGA ROAD\",\r\n    214: \"SEACOM MANAGEMENT COLLEGE JALADHULAGORI\",\r\n    215: \"NIMAS\",\r\n    216: \"ABS ACADEMY OF SCIENCE TECHNOLOGY & MANAGEMENT\",\r\n    220: \"PRAJNANANANDA INSTITUTE OF TECHNOLOGY & MANAGEMENT\",\r\n    221: \"GURUKUL MANAGEMENT STUDIES MOUZA-NARAYANPUR\",\r\n    226: \"TECHNO INDIA\",\r\n    229: \"DURGAPUR INSTITUTE OF SCIENCE TECHNOLOGY AND MANAGEMENT\",\r\n    230: \"CAMELLIA INSTITUTE OF TECHNOLOGY DIGBERIA\",\r\n    234: \"NSHM COLLEGE OF MANAGEMENT & TECHNOLOGY\",\r\n    235: \"SEACOM MARINE COLLEGE JALADHULAGORI\",\r\n    236: \"GREATER KOLKATA COLLEGE OF ENGINEERING & MANAGEMENT\",\r\n    238: \"CAMELLIA SCHOOL OF ENGINEERING\",\r\n    240: \"ABACUS INSTITUTE OF ENGINEERING\",\r\n    241: \"SWAMI VIVEKANANDA INSTITUTE OF SCIENCE & TECHNOLOGY\",\r\n    242: \"BENGAL COLLEGE OF PHARMACEUTICAL SCIENCES & RESEARCH\",\r\n    243: \"WEST BENGAL STATE COUNCIL FOR SCIENCE & TECHNOLOGY\",\r\n    244: \"TECHNO ENGINEERING COLLEGE\",\r\n    246: \"RINPOCHE ACADEMY OF MANAGEMENT AND TECHNOLOGY\",\r\n    250: \"SWAMI VIVEKANANDA INSTITUTE OF MANAGEMENT & COMPUTER SCIENCE\",\r\n    252: \"KANAD INSTITUTE OF ENGINEERING & MANAGEMENT\",\r\n    253: \"SUPREME KNOWLEDGE FOUNDATION GROUP OF INSTITUTIONS\",\r\n    255: \"DR. SUDHIR CHANDRA SUR INSTITUTE\",\r\n    257: \"CAMELLIA INSTITUTE OF TECHNOLOGY & MANAGEMENT\",\r\n    259: \"GLOBAL INSTITUTE OF MANAGEMENT AND TECHNOLOGY\",\r\n    260: \"BENGAL COLLEGE OF ENGINEERING SHILPO KANAN ROAD\",\r\n    261: \"SURENDRA INSTITUTE OF ENGINEERING & MANAGEMENT\",\r\n    263: \"REGENT EDUCATION & RESEARCH\",\r\n    264: \"SWAMI VIVEKANANDA INSTITUTE OF MODERN SCIENCE\",\r\n    265: \"DOLPHIN SCHOOL OF HOTEL MANAGEMENT\",\r\n    266: \"BENGAL SCHOOL OF TECHNOLOGY & MANAGEMENT\",\r\n    269: \"MODERN INSTITUTE OF ENGINEERING\",\r\n    271: \"CAMELLIA INSTITUTE OF ENGINEERING\",\r\n    273: \"NSHM KNOWLEDGE CAMPUS\",\r\n    275: \"OMDAYAL GROUP OF INSTITUTIONS\",\r\n    276: \"BUDGE BUDGE INSTITUTE OF TECHNOLOGY\",\r\n    277: \"NSHM KNOWLEDGE CAMPUS\",\r\n    278: \"SANAKA EDUCATIONAL TRUST\",\r\n    279: \"IDEAL INSTITUTE OF ENGINEERING KALYANI SHILPANCHAL\",\r\n    281: \"GARGI MEMORIAL INSTITUTE OF TECHNOLOGY CAMPUS\",\r\n    286: \"ST. MARY'S TECHNICAL CAMPUS\",\r\n    287: \"ROCKVALE MANAGEMENT COLLEGE 9\",\r\n    288: \"DARJEELING UNIVERSAL CAMPUS TAKDAH CANTONMENT\",\r\n    289: \"ILEAD (INSTITUTE OF LEADERSHIP)\",\r\n    290: \"INSTITUTE OF HOTEL AND RESTAURANT MANAGEMENT\",\r\n    291: \"NETAJI SUBHASH ENGINEERING COLLEGE\",\r\n    292: \"NETAJI SUBHASH ENGINEERING COLLEGE\",\r\n    294: \"FUTURE INSTITUTE OF ENGINEERING\",\r\n    296: \"PAILAN COLLEGE OF MANAGEMENT & TECHNOLOGY (MBA DIVISION)\",\r\n    297: \"PAILAN COLLEGE OF MANAGEMENT & TECHNOLOGY\",\r\n    298: \"INSTITUTE OF BUSINESS MANAGEMENT\",\r\n    299: \"CALCUTTA INSTITUTE OF ENGG. AND MANAGEMENT\",\r\n    300: \"MAKAUT WB\",\r\n    301: \"B. P. PODDAR INSTITUTE OF MANAGEMENT & TECHNOLOGY\",\r\n    304: \"HERITAGE BUSINESS SCHOOL\",\r\n    306: \"NARULA INSTITUTE OF TECHNOLOGY\",\r\n    309: \"TECHNO INDIA\",\r\n    310: \"MEGHNAD SAHA INSTITUTE OF TECHNOLOGY\",\r\n    311: \"GURUNANAK INSTITUTE OF TECHNOLOGY\",\r\n    312: \"GURUNANAK INSTITUTE OF HOTEL MANAGEMENT\",\r\n    313: \"GURUNANAK INSTITUTE OF PHARMACEUTICAL SCIENCE & TECHNOLOGY\",\r\n    314: \"TECHNO INDIA COLLEGE OF MEGHA CITY\",\r\n    318: \"JIS COLLEGE OF ENGINEERING BLOCK A\",\r\n    320: \"SAROJ MOHAN INSTITUTE OF TECHNOLOGY\",\r\n    321: \"INSTITUTE OF SCIENCE & TECHNOLOGY DHURABILA\",\r\n    322: \"ASANSOL ENGINEERING COLLEGE KANYAPUR\",\r\n    323: \"DR. B. C. ROY ENGINEERING COLLEGE ACADEMY OF PROFESSIONAL\",\r\n    324: \"BENGAL COLLEGE OF ENGINEERING & TECHNOLOGY\",\r\n    326: \"MANAGEMENT INSTITUTE OF DURGAPUR\",\r\n    327: \"ARYABHATTA INSTITUTE OF ENGINEERING & MANAGEMENT\",\r\n    328: \"ABS ACADEMY OF SCIENCE\",\r\n    329: \"BENGAL INSTITUTE OF TECHNOLOGY & MANAGEMENT\",\r\n    330: \"MURSHIDABAD COLLEGE OF ENGINEERING AND TECHNOLOGY\",\r\n    331: \"DUMKAL INSTITUTE OF ENGINEERING\",\r\n    332: \"TECHNO INTERNATIONAL BATANAGAR PUTKHALI\",\r\n    333: \"IMS BUSINESS SCHOOL VILL-MAKRAMPUR\",\r\n    334: \"SILIGURI INSTITUTE OF TECHNOLOGY HILL CART ROAD\",\r\n    335: \"SILIGURI INSTITUTE OF TECHNOLOGY\",\r\n    336: \"SILIGURI INSTITUTE OF TECHNOLOGY\",\r\n    337: \"GLOBAL GROUP OF INSTITUTIONS SRIKRISHNAPUR\",\r\n    338: \"IIAS SCHOOL OF MANAGEMENT\",\r\n    339: \"BHARATIYA VIDYA BHAVAN INSTITUTE\",\r\n    340: \"CONTAI COLLEGE OF LEARNING & MANAGEMENT SCIENCE\",\r\n    341: \"SBIHM SCHOOL OF MANAGEMENT JAGANNATHPUR ROAD\",\r\n    342: \"FUTURE INSTITUTE OF TECHNOLOGY\",\r\n    343: \"HEMNALINI MEMORIAL COLLEGE OF ENGINEERING\",\r\n    344: \"INSPIRIA KNOWLEDGE CAMPUS HIMACHAL VIHAR\",\r\n    345: \"GLOBAL COLLEGE OF SCIENCE AND TECHNOLOGY\",\r\n    346: \"ELITTE COLLEGE OF ENGINEERING KARNAMADHABPUR \",\r\n    347: \"JLD ENGINEERING AND MANAGEMENT\",\r\n    348: \"EMINENT COLLEGE OF MANAGEMENT\",\r\n    349: \"COOCH BEHAR GOVERNMENT ENGINEERING COLLEGE\",\r\n    350: \"RAMKRISHNA MAHATO GOVERNMENT ENGINEERING COLLEGE PURULIA\",\r\n    351: \"SWAMI VIVEKANANDA INSTITUTE OF MODERN STUDIES\",\r\n    352: \"P. G. INSTITUTE OF MEDICAL SCIENCES DHURABILA\",\r\n    353: \"BIRBHUM PHARMACY SCHOOL BANDHERSOLE\",\r\n    354: \"EMINENT COLLEGE OF PHARMACEUTICAL TECHNOLOGY\",\r\n    355: \"GHANI KHAN CHOUDHURY INSTITUTE\",\r\n    356: \"GLOBAL COLLEGE OF PHARMACEUTICAL TECHNOLOGY\",\r\n    358: \"SUBHAS BOSE INSTITUTE OF HOTEL MANAGEMENT\",\r\n    359: \"SUSRUT EYE FOUNDATION & RESEARCH CENTRE\",\r\n    361: \"WEBEL DQE ANIMATION ACADEMY WEBEL BHAVAN\",\r\n    362: \"GITANJALI COLLEGE OF PHARMACY VILL+P.O.-LOHAPUR\",\r\n    363: \"M.R. COLLEGE OF PHARMACEUTICAL\",\r\n    364: \"SUPREME INSTITUTE OF MANAGEMENT\",\r\n    365: \"ANAND COLLEGE OF EDUCATION VILL KABILPUR\",\r\n    366: \"INSTITUTE OF ENGINEERING & MANAGEMENT\",\r\n    376: \"BENGAL COLLEGE OF PHARMACEUTICAL TECHNOLOGY\",\r\n}\r\nexport default colleges;\r\n\r\nconst cources = {\r\n    \"052\": \"B.Tech Apparel & Production Management\",\r\n    \"053\": \"B.Tech Applied Electronics & Instrumentation Engineering   \",\r\n    \"055\": \"B.Tech Applied Electronics & Instrumentation Engineering   \",\r\n    \"023\": \"Bachelor Architecture\",\r\n    \"032\": \"B.Tech Automobile Engineering\",\r\n    \"031\": \"B.Tech Biomedical Engineering\",\r\n    \"004\": \"B.Tech Biotechnology\",\r\n    \"006\": \"B.Tech Chemical Engineering\",\r\n    \"054\": \"B.Tech Civil & Environmental Engineering\",\r\n    \"013\": \"B.Tech Civil Engineering\",\r\n    \"001\": \"B.Tech Computer Sc. & Engineering\",\r\n    \"028\": \"B.Tech Electrical & Electronics Engineering\",\r\n    \"016\": \"B.Tech Electrical Engineering\",\r\n    \"003\": \"B.Tech Electronics & Communications Engg\",\r\n    \"034\": \"B.Tech Food Technology\",\r\n    \"022\": \"Bachelor Hotel Management & Catering Technology\",\r\n    \"002\": \"B.Tech Information Technology\",\r\n    \"040\": \"B.Tech Instrumentation & Control Engineering\",\r\n    \"018\": \"B.Tech Leather Technology\",\r\n    \"007\": \"B.Tech Mechanical Engineering\",\r\n    \"019\": \"Bachelor of Pharmacy\",\r\n    \"014\": \"B.Tech Textile Technology\",\r\n    \"320\": \"B.Tech Robotics\",\r\n    \"304\": \"B.Tech Data Science\",\r\n    \"305\": \"B.Tech Computer Science and Engineering (Data Science)\",\r\n    \"306\": \"B.Tech Artificial Intelligence and Machine Learning\",\r\n    \"308\": \"B.Tech Computer Science And Engineering (AI & ML) \",\r\n    \"309\": \"B.Tech Computer Science And Engineering (IoT & Cyber Security including Block Chain Technology)\",\r\n    \"310\": \"B.Tech Artificial Intelligence And Data Science\",\r\n    \"311\": \"B.Tech Computer Science and Business System\",\r\n    \"536\": \"Bachelor of Hospitality And Tourism Administration \",\r\n    \"315\": \"B.Tech Computer Science & Design (CSD)\",\r\n}\r\nexport const course_code = cources;\r\n\r\nexport const HTTP_METHOD = \"https://\";\r\nexport const SERVER1 = \"gradecard.prasannathapa.in\";\r\nexport const SERVER2 = \"{{ENTER YOUR URL WITHOUT HTTPS://}}\";\r\n//const HTTP_METHOD = \"http://\";\r\n//const HOST_URL = \"localhost:8080\";\r\nexport const SELECTED_SERVER = \"selectedServer\";\r\nlet API_HOST = HTTP_METHOD + ((Math.floor(1+Math.random()*10) % 2 == 0) ? SERVER1 : SERVER2);\r\nlet savedServer = localStorage.getItem(SELECTED_SERVER);\r\nfunction setHost(server) {\r\n    if (server == SERVER1)\r\n        API_HOST = HTTP_METHOD + SERVER1;\r\n    else\r\n        API_HOST = HTTP_METHOD + SERVER2;\r\n}\r\nif (savedServer == SERVER1 || savedServer == SERVER2)\r\n    setHost(savedServer);\r\nexport { API_HOST, setHost };\r\n\r\nexport const colors = [\r\n    \"#63b598\", \"#ce7d78\", \"#ea9e70\", \"#a48a9e\", \"#c6e1e8\", \"#648177\", \"#0d5ac1\",\r\n    \"#f205e6\", \"#1c0365\", \"#14a9ad\", \"#4ca2f9\", \"#a4e43f\", \"#d298e2\", \"#6119d0\",\r\n    \"#d2737d\", \"#c0a43c\", \"#f2510e\", \"#651be6\", \"#79806e\", \"#61da5e\", \"#cd2f00\",\r\n    \"#9348af\", \"#01ac53\", \"#c5a4fb\", \"#996635\", \"#b11573\", \"#4bb473\", \"#75d89e\",\r\n    \"#2f3f94\", \"#2f7b99\", \"#da967d\", \"#34891f\", \"#b0d87b\", \"#ca4751\", \"#7e50a8\",\r\n    \"#c4d647\", \"#e0eeb8\", \"#11dec1\", \"#289812\", \"#566ca0\", \"#ffdbe1\", \"#2f1179\",\r\n    \"#935b6d\", \"#916988\", \"#513d98\", \"#aead3a\", \"#9e6d71\", \"#4b5bdc\", \"#0cd36d\",\r\n    \"#250662\", \"#cb5bea\", \"#228916\", \"#ac3e1b\", \"#df514a\", \"#539397\", \"#880977\",\r\n    \"#f697c1\", \"#ba96ce\", \"#679c9d\", \"#c6c42c\", \"#5d2c52\", \"#48b41b\", \"#e1cf3b\",\r\n    \"#5be4f0\", \"#57c4d8\", \"#a4d17a\", \"#225b8\", \"#be608b\", \"#96b00c\", \"#088baf\",\r\n    \"#f158bf\", \"#e145ba\", \"#ee91e3\", \"#05d371\", \"#5426e0\", \"#4834d0\", \"#802234\",\r\n    \"#6749e8\", \"#0971f0\", \"#8fb413\", \"#b2b4f0\", \"#c3c89d\", \"#c9a941\", \"#41d158\",\r\n    \"#fb21a3\", \"#51aed9\", \"#5bb32d\", \"#807fb\", \"#21538e\", \"#89d534\", \"#d36647\",\r\n    \"#7fb411\", \"#0023b8\", \"#3b8c2a\", \"#986b53\", \"#f50422\", \"#983f7a\", \"#ea24a3\",\r\n    \"#79352c\", \"#521250\", \"#c79ed2\", \"#d6dd92\", \"#e33e52\", \"#b2be57\", \"#fa06ec\",\r\n    \"#1bb699\", \"#6b2e5f\", \"#64820f\", \"#1c271\", \"#21538e\", \"#89d534\", \"#d36647\",\r\n    \"#7fb411\", \"#0023b8\", \"#3b8c2a\", \"#986b53\", \"#f50422\", \"#983f7a\", \"#ea24a3\",\r\n    \"#79352c\", \"#521250\", \"#c79ed2\", \"#d6dd92\", \"#e33e52\", \"#b2be57\", \"#fa06ec\",\r\n    \"#1bb699\", \"#6b2e5f\", \"#64820f\", \"#1c271\", \"#9cb64a\", \"#996c48\", \"#9ab9b7\",\r\n    \"#06e052\", \"#e3a481\", \"#0eb621\", \"#fc458e\", \"#b2db15\", \"#aa226d\", \"#792ed8\",\r\n    \"#73872a\", \"#520d3a\", \"#cefcb8\", \"#a5b3d9\", \"#7d1d85\", \"#c4fd57\", \"#f1ae16\",\r\n    \"#8fe22a\", \"#ef6e3c\", \"#243eeb\", \"#1dc18\", \"#dd93fd\", \"#3f8473\", \"#e7dbce\",\r\n    \"#421f79\", \"#7a3d93\", \"#635f6d\", \"#93f2d7\", \"#9b5c2a\", \"#15b9ee\", \"#0f5997\",\r\n    \"#409188\", \"#911e20\", \"#1350ce\", \"#10e5b1\", \"#fff4d7\", \"#cb2582\", \"#ce00be\",\r\n    \"#32d5d6\", \"#17232\", \"#608572\", \"#c79bc2\", \"#00f87c\", \"#77772a\", \"#6995ba\",\r\n    \"#fc6b57\", \"#f07815\", \"#8fd883\", \"#060e27\", \"#96e591\", \"#21d52e\", \"#d00043\",\r\n    \"#b47162\", \"#1ec227\", \"#4f0f6f\", \"#1d1d58\", \"#947002\", \"#bde052\", \"#e08c56\",\r\n    \"#28fcfd\", \"#bb09b\", \"#36486a\", \"#d02e29\", \"#1ae6db\", \"#3e464c\", \"#a84a8f\",\r\n    \"#911e7e\", \"#3f16d9\", \"#0f525f\", \"#ac7c0a\", \"#b4c086\", \"#c9d730\", \"#30cc49\",\r\n    \"#3d6751\", \"#fb4c03\", \"#640fc1\", \"#62c03e\", \"#d3493a\", \"#88aa0b\", \"#406df9\",\r\n    \"#615af0\", \"#4be47\", \"#2a3434\", \"#4a543f\", \"#79bca0\", \"#a8b8d4\", \"#00efd4\",\r\n    \"#7ad236\", \"#7260d8\", \"#1deaa7\", \"#06f43a\", \"#823c59\", \"#e3d94c\", \"#dc1c06\",\r\n    \"#f53b2a\", \"#b46238\", \"#2dfff6\", \"#a82b89\", \"#1a8011\", \"#436a9f\", \"#1a806a\",\r\n    \"#4cf09d\", \"#c188a2\", \"#67eb4b\", \"#b308d3\", \"#fc7e41\", \"#af3101\", \"#ff065\",\r\n    \"#71b1f4\", \"#a2f8a5\", \"#e23dd0\", \"#d3486d\", \"#00f7f9\", \"#474893\", \"#3cec35\",\r\n    \"#1c65cb\", \"#5d1d0c\", \"#2d7d2a\", \"#ff3420\", \"#5cdd87\", \"#a259a4\", \"#e4ac44\",\r\n    \"#1bede6\", \"#8798a4\", \"#d7790f\", \"#b2c24f\", \"#de73c2\", \"#d70a9c\", \"#25b67\",\r\n    \"#88e9b8\", \"#c2b0e2\", \"#86e98f\", \"#ae90e2\", \"#1a806b\", \"#436a9e\", \"#0ec0ff\",\r\n    \"#f812b3\", \"#b17fc9\", \"#8d6c2f\", \"#d3277a\", \"#2ca1ae\", \"#9685eb\", \"#8a96c6\",\r\n    \"#dba2e6\", \"#76fc1b\", \"#608fa4\", \"#20f6ba\", \"#07d7f6\", \"#dce77a\", \"#77ecca\"]\r\n\r\nexport const subCodes = {\r\n    \"BSCH101\": [\"SM01\"],\r\n    \"BSCH191\": [\"SM01\"],\r\n    \"BSM101\": [\"SM01\"],\r\n    \"BSPH101\": [\"SM01\"],\r\n    \"BSPH191\": [\"SM01\"],\r\n    \"ESEE101\": [\"SM01\"],\r\n    \"ESEE191\": [\"SM01\"],\r\n    \"ESME191\": [\"SM01\"],\r\n    \"ESME192\": [\"SM01\"],\r\n    \"BSCH201\": [\"SM02\"],\r\n    \"BSCH291\": [\"SM02\"],\r\n    \"BSM201\": [\"SM02\"],\r\n    \"BSPH201\": [\"SM02\"],\r\n    \"BSPH291\": [\"SM02\"],\r\n    \"ESCS201\": [\"SM02\"],\r\n    \"ESCS291\": [\"SM02\"],\r\n    \"ESME291\": [\"SM02\"],\r\n    \"ESME292\": [\"SM02\"],\r\n    \"HMHU201\": [\"SM02\"],\r\n    \"HMHU291\": [\"SM02\"],\r\n    \"BSC301\": [\"SM03\"],\r\n    \"CH301\": [\"SM03\"],\r\n    \"CS301\": [\"SM03\"],\r\n    \"CS302\": [\"SM03\"],\r\n    \"CS303\": [\"SM03\"],\r\n    \"CS391\": [\"SM03\"],\r\n    \"CS392\": [\"SM03\"],\r\n    \"CS393\": [\"SM03\"],\r\n    \"ES-CS391\": [\"SM03\"],\r\n    \"ESC301\": [\"SM03\"],\r\n    \"HSMC301\": [\"SM03\"],\r\n    \"HU301\": [\"SM03\"],\r\n    \"PCC-CS301\": [\"SM03\"],\r\n    \"PCC-CS302\": [\"SM03\"],\r\n    \"PCC-CS391\": [\"SM03\"],\r\n    \"PCC-CS392\": [\"SM03\"],\r\n    \"PCC-CS393\": [\"SM03\"],\r\n    \"PH301\": [\"SM03\"],\r\n    \"PH391\": [\"SM03\"],\r\n    \"BSC 401\": [\"SM04\"],\r\n    \"CS401\": [\"SM04\"],\r\n    \"CS402\": [\"SM04\"],\r\n    \"CS403\": [\"SM04\"],\r\n    \"CS491\": [\"SM04\"],\r\n    \"CS492\": [\"SM04\"],\r\n    \"CS493\": [\"SM04\"],\r\n    \"HU481\": [\"SM04\"],\r\n    \"M401\": [\"SM04\"],\r\n    \"MC401:\": [\"SM04\"],\r\n    \"MCS401\": [\"SM04\"],\r\n    \"MCS491\": [\"SM04\"],\r\n    \"PCC-CS401\": [\"SM04\"],\r\n    \"PCC-CS402\": [\"SM04\"],\r\n    \"PCC-CS403\": [\"SM04\"],\r\n    \"PCC-CS404\": [\"SM04\"],\r\n    \"PCC-CS492\": [\"SM04\"],\r\n    \"PCC-CS494\": [\"SM04\"],\r\n    \"CS501\": [\"SM05\"],\r\n    \"CS502\": [\"SM05\"],\r\n    \"CS503\": [\"SM05\"],\r\n    \"CS504D\": [\"SM05\"],\r\n    \"CS591\": [\"SM05\"],\r\n    \"CS592\": [\"SM05\"],\r\n    \"CS593\": [\"SM05\"],\r\n    \"CS594D\": [\"SM05\"],\r\n    \"HU501\": [\"SM05\"],\r\n    \"CS601\": [\"SM06\"],\r\n    \"CS602\": [\"SM06\"],\r\n    \"CS603\": [\"SM06\"],\r\n    \"CS604B\": [\"SM06\"],\r\n    \"CS605A\": [\"SM06\"],\r\n    \"CS681\": [\"SM06\"],\r\n    \"CS691\": [\"SM06\"],\r\n    \"CS692\": [\"SM06\"],\r\n    \"CS693\": [\"SM06\"],\r\n    \"HU601\": [\"SM06\"]\r\n}\r\n","import { Component } from \"react\";\r\nimport updateIcon from '../ToggleButton/sync.svg'\r\nimport './gradecard.scss'\r\nimport {\r\n    BarChart,\r\n    Bar,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    ResponsiveContainer,\r\n    Cell\r\n} from \"recharts\";\r\nimport { API_HOST } from \"../../Database/db\";\r\nconst sems = [\"1st sem\", \"2nd sem\", \"3rd sem\", \"4th sem\", \"5th sem\", \"6th sem\", \"7th sem\", \"8th sem\"]\r\nconst NOTSTARTED = 0;\r\nconst FETCHING = 1;\r\nconst DONE = 2;\r\nconst ERROR = -1;\r\nclass GradeCard extends Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.showAdditionalInfo = this.showAdditionalInfo.bind(this);\r\n        this.showModal = this.showModal.bind(this);\r\n        this.state = { title: props.title, semData: props.semData, showInfo: {}, chartState: NOTSTARTED, chartData: null }\r\n    }\r\n    showModal(e) {\r\n        e.stopPropagation();\r\n    }\r\n    showAdditionalInfo(e) {\r\n        e.stopPropagation();\r\n        let info = this.state.showInfo;\r\n        const feild = e.currentTarget.getAttribute(\"data\");\r\n        info[feild] = !info[feild];\r\n        this.setState(s => ({ showInfo: info }));\r\n    }\r\n    getPercentile(analData, chartData) {\r\n        let obj1 = {}, obj2 = {}\r\n        for (let subCode in chartData) {\r\n            let myCGPA = parseFloat(chartData[subCode].CGPA);\r\n            let studentBelowMe = 0.0, totalStudent = 0.0;\r\n            let analyticsArray = analData[subCode];\r\n            //console.log(chartData);\r\n            for (let i = 0; i < analyticsArray.length; i++) {\r\n                if (parseFloat(analyticsArray[i].CGPA) < myCGPA)\r\n                    studentBelowMe += analyticsArray[i].count;\r\n                totalStudent += analyticsArray[i].count;\r\n            }\r\n            obj2[subCode] = { percentile: ((studentBelowMe / totalStudent) * 100).toFixed(2), studentBelowMe: studentBelowMe, totalStudent: totalStudent }\r\n            obj1[this.props.semNo] = obj1[this.props.semNo] || [];\r\n            obj1[this.props.semNo].push({ percentile: parseFloat(((studentBelowMe / totalStudent) * 100).toFixed(2)), subCode: subCode, subName: chartData[subCode].subjectName })\r\n        }\r\n        if (this._isMounted) {\r\n            this.setState(() => ({\r\n                percentile: obj2\r\n            }))\r\n            this.props.percentileCallback(obj1);\r\n        }\r\n    }\r\n    processAndSort(arr) {\r\n        let obj = []\r\n        for (let i = 0; i < 10; i++) {\r\n            obj[i] = { CGPA: (i + 1).toString(), count: 0 }\r\n        }\r\n        for (let i = 0; i < arr.length; i++) {\r\n            obj[parseInt(arr[i].CGPA) - 1] = { \"CGPA\": arr[i].CGPA, count: arr[i].count }\r\n        }\r\n        //console.log(obj);\r\n        return obj;\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    componentDidMount(prevProps, prevState) {\r\n        this._isMounted = true;\r\n        //console.log(\"componentDidUpdate\");\r\n        if (this.props.singleSem && this.state.chartState === NOTSTARTED) {\r\n            this.setState(() => ({ chartState: FETCHING }));\r\n            //console.log(API_HOST + \"/analytics/subjects/\" + this.props.roll + \"/\" + this.props.semNo);\r\n            fetch(API_HOST+\"/analytics/subjects/\" + this.props.roll + \"/\" + this.props.semNo)\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    //console.log(result);\r\n                    if (result['SM0' + this.props.semNo]) {\r\n                        //console.log(this.state.semData, result['SM0' + this.props.semNo]);\r\n                        this.getPercentile(result['SM0' + this.props.semNo], this.state.semData)\r\n                        if (this._isMounted)\r\n                            this.setState(() => ({ chartData: result['SM0' + this.props.semNo], chartState: DONE }));\r\n                    }\r\n                    /*if (result.name){\r\n                        for (var key in result) {\r\n                            this.setState(()=>({chartData:result[key]}));\r\n                            break;\r\n                        }\r\n                    }\r\n                    else\r\n                        toast(\"Records not Found!\", { type: toast.TYPE.INFO });\r\n\r\n                    this.setState(() => ({ semResult: result, fetchState: DONE }));*/\r\n                    //console.log(result);\r\n                },\r\n                    // Note: it's important to handle errors here\r\n                    // instead of a catch() block so that we don't swallow\r\n                    // exceptions from actual bugs in components.\r\n                    (error) => {\r\n                        this.setState(() => ({ chartState: ERROR }));\r\n                        console.log(error);\r\n                    }\r\n                )\r\n        }\r\n    }\r\n    render() {\r\n        let items\r\n        let marksTotal = 0, fullMarks = 0;\r\n        let avg = 0, semcount = 0;\r\n        if (this.props.singleSem) {\r\n            if (this.props.semData.info)\r\n                return null;\r\n            items = Object.keys(this.props.semData).map((key, index) => {\r\n                let semObj = this.props.semData[key];\r\n                marksTotal += parseFloat(semObj.CGPA) * parseFloat(semObj.weightage);\r\n                fullMarks += parseFloat(semObj.weightage);\r\n                return (\r\n                    <div className=\"row\" key={index} data={key} onClick={this.showAdditionalInfo}>\r\n                        <span className=\"subject\">{semObj.subjectName}</span>\r\n                        <span className=\"marks\">{semObj.CGPA + \" GCPA\"}</span>\r\n                        <div className=\"progress\">\r\n                            <div style={{ maxWidth: semObj.CGPA * 10 + \"%\" }}></div>\r\n                        </div>\r\n                        {this.state.showInfo[key] &&\r\n                            <div className=\"chartdiv\" onClick={this.showModal}>\r\n                                {this.state.chartData &&\r\n                                    <ResponsiveContainer minHeight={100} maxHeight={200} width=\"100%\" height=\"100%\" >\r\n                                        {this.state.chartData &&\r\n                                            <BarChart data={this.processAndSort(this.state.chartData[key])}>\r\n                                                <CartesianGrid strokeDasharray=\"1 1\" />\r\n                                                <XAxis height={40} dataKey=\"CGPA\" label={{ value: \"CGPA\", position: \"insideBottomMiddle\", dx: 0, dy: 13 }} />\r\n                                                <YAxis label={{ value: \"Students\", position: \"outsideMiddle\", angle: -90, dx: -20 }} />\r\n                                                <Tooltip cursor={{ fill: '#fff' }} />\r\n                                                <Bar dataKey=\"count\" >{\r\n                                                    this.processAndSort(this.state.chartData[key]).map((value, subIndex) =>\r\n                                                        <Cell key={subIndex} fill={value.CGPA === semObj.CGPA ? \"#e60000\" : \"#000000 \"} />\r\n                                                    )\r\n                                                }\r\n                                                </Bar>\r\n                                            </BarChart>}\r\n                                    </ResponsiveContainer>\r\n                                }\r\n                                {this.state.percentile && <div style={{ textAlign: 'start', fontFamily: 'Open Sans' }}>\r\n                                    Subject code: {key} <br></br>\r\n                                    Percentile: {this.state.percentile[key].percentile} %<br></br>\r\n                                    {this.state.percentile[key].percentile > 0 &&\r\n                                        \"Performed better then \" + this.state.percentile[key].studentBelowMe +\r\n                                        \" Out of \" +\r\n                                        this.state.percentile[key].totalStudent + \" students\"}\r\n                                </div>\r\n                                }\r\n                                {!this.state.chartData &&\r\n                                    <img className=\"updating\" src={updateIcon} />\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                )\r\n            });\r\n        }\r\n        else {\r\n            items = Object.keys(this.props.semData).map((key, index) => {\r\n                if (['SM01', 'SM02', 'SM03', 'SM04', 'SM05', 'SM06', 'SM07', 'SM08'].includes(key)) {\r\n                    let width, semtotalStudent = 0, semfullMarks = 0;\r\n                    let semObj = this.props.semData[key];\r\n                    if (semObj.info)\r\n                        semtotalStudent = \"(Not found) N/A\";\r\n                    else {\r\n                        //console.log(semObj);\r\n                        semcount++;\r\n                        for (let i in semObj) {\r\n                            semtotalStudent += parseFloat(semObj[i].CGPA) * parseFloat(semObj[i].weightage);\r\n                            semfullMarks += parseFloat(semObj[i].weightage);\r\n                        }\r\n                        //console.log(marksTotal, fullMarks);\r\n                        avg += (semtotalStudent / semfullMarks);\r\n                        //console.log(avg,semcount);\r\n                        width = (semtotalStudent / semfullMarks) * 10 + \"%\";\r\n                        semtotalStudent = (semtotalStudent / semfullMarks).toFixed(2) + \" CGPA\"\r\n                    }\r\n                    const MiniPreview = Object.keys(semObj).map((subKey, subIndex) => (\r\n                        <div className=\"sub-row\" key={subIndex} data={subKey} onClick={this.showAdditionalInfo}>\r\n                            <span className=\"subject\">{semObj[subKey].subjectName}</span>\r\n                            <span className=\"marks\">{semObj[subKey].CGPA + \" GCPA\"}</span>\r\n                            <div className=\"progress\">\r\n                                <div style={{ maxWidth: semObj[subKey].CGPA * 10 + \"%\" }}></div>\r\n                            </div>\r\n                        </div>\r\n                    ));\r\n                    return (\r\n                        <div className=\"row\" key={index} data={key} onClick={this.showAdditionalInfo}>\r\n                            <span className=\"subject\">{sems[key[key.length - 1] - 1]}</span>\r\n                            <span className=\"marks\">{semtotalStudent}</span>\r\n                            <div className=\"progress\">\r\n                                <div style={{ maxWidth: width, borderColor:semObj.info?\"red\":\"#000\"}}></div>\r\n                            </div>\r\n                            {this.state.showInfo[key] && !semObj.info && <div className=\"gradecard height-anim\" style={{ borderRadius: \"12px\", margin: \"0 0\" }}>\r\n                                {MiniPreview}\r\n                            </div>}\r\n                        </div >\r\n                    )\r\n                }\r\n                return null\r\n            }\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"gradecard\">\r\n                <header>{this.state.title}</header>\r\n                {!this.props.singleSem &&\r\n                    <div className=\"roll\" style={{ fontWeight: \"800\", paddingBottom: \"14px\" }}>\r\n                        {this.props.roll}\r\n                    </div>\r\n                }\r\n                {items}\r\n                {this.props.singleSem &&\r\n                    <div className=\"row\" style={{ marginTop: \"auto\" }}>\r\n                        <span className=\"subject\" style={{ fontSize: \"32px\" }}>Total</span>\r\n                        <span className=\"marks\" style={{ fontSize: \"32px\" }}>{(marksTotal / fullMarks).toFixed(2) + \" CGPA\"}</span>\r\n                    </div>\r\n                }\r\n                {!this.props.singleSem &&\r\n                    <div className=\"row\" style={{ marginTop: \"auto\" }}>\r\n                        <span className=\"subject\" style={{ fontSize: \"32px\" }}>Total</span>\r\n                        <span className=\"marks\" style={{ fontSize: \"32px\" }}>{(avg / semcount).toFixed(2) + \" CGPA\"}</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//singleSem\r\nexport default GradeCard;","import { Component } from \"react\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport SearchBox from \"../SearchBox/SearchBox\";\r\nimport updateIcon from \"../ToggleButton/sync.svg\";\r\nimport tickIcon from \"../ToggleButton/done.svg\";\r\nimport GradeCard from \"../GradeCard/GradeCard\";\r\nimport \"./MultiReport.scss\";\r\nimport { API_HOST } from \"../../Database/db\";\r\nconst IDLE = 0;\r\nconst DONE = 10;\r\nconst FETCHING = 1;\r\nconst ERROR = -1;\r\nconst sems = [\"1st sem\", \"2nd sem\", \"3rd sem\", \"4th sem\", \"5th sem\", \"6th sem\", \"7th sem\", \"8th sem\"]\r\n\r\nclass MultiReport extends Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchTextUpdate1 = this.searchTextUpdate1.bind(this);\r\n        this.searchTextUpdate2 = this.searchTextUpdate2.bind(this);\r\n        this.semsQueryHandler = this.semsQueryHandler.bind(this);\r\n        this.getRangeResult = this.getRangeResult.bind(this);\r\n        this.searchState = this.searchState.bind(this);\r\n        this.sortFilter = this.sortFilter.bind(this);\r\n        this.sortProp = this.sortProp.bind(this);\r\n        this.textFilter = this.textFilter.bind(this);\r\n        let savedState = JSON.parse(localStorage.getItem('MultiStudentState')) ||\r\n            { input: false, text1: \"\", text2: \"\", sems: {}, fetchState: IDLE, semResult: {}, sortBy: 0, sort: 1 };\r\n        this.state = savedState;\r\n    }\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    getRangeResult(e) {\r\n        if (this.state.fetchState !== FETCHING && this._isMounted) {\r\n            this.setState(() => ({ fetchState: FETCHING, semResult: {} }));\r\n        }\r\n        else {\r\n            toast(\"Processing results. Please wait!\", { type: toast.TYPE.DARK })\r\n        }\r\n    }\r\n    sortedObj(jsonObj, sort) {\r\n        return Object.keys(jsonObj).sort((a, b) => {\r\n            a = parseInt(a)\r\n            b = parseInt(b)\r\n            if (sort == 1)\r\n                return a < b ? -1 : a > b ? 1 : 0;\r\n            return a > b ? -1 : a < b ? 1 : 0;\r\n        }).reduce((obj, key) => {\r\n            obj[key] = jsonObj[key];\r\n            return obj;\r\n        }, {});\r\n    }\r\n    sortSems(semResult, sortBy, sort) {\r\n        let obj = [];\r\n        console.log(sortBy, sort);\r\n        for (let i in semResult)\r\n            obj.push(semResult[i]);\r\n        if (sortBy >= 0) {\r\n            obj.sort((a, b) => {\r\n                let prop = [\"SM01\", \"SM02\", \"SM03\", \"SM04\", \"SM05\", \"SM06\", \"SM07\", \"SM08\"]\r\n                let ar = a.results || {};\r\n                let br = b.results || {};\r\n                let x = ar[prop[sortBy]]\r\n                let y = br[prop[sortBy]]\r\n                if (!x) x = 999 * sort;\r\n                if (!y) y = 999 * sort;\r\n                if (x > y) {\r\n                    return sort == 1 ? 1 : -1;\r\n                }\r\n                else if (x < y)\r\n                    return sort == 1 ? -1 : 1;\r\n                else\r\n                    return 0;\r\n            });\r\n            console.log(obj)\r\n            let sR = {};\r\n            for (let data of obj)\r\n                sR[data.roll] = data;\r\n            semResult = sR;\r\n        }\r\n        else if (sortBy == -1) {\r\n            semResult = this.sortedObj(semResult, sort);\r\n        }\r\n        else if (sortBy == -2) {\r\n            obj.sort((a, b) => {\r\n\r\n                let sems_cgpa = Object.values(a.results || {});\r\n                let x = sems_cgpa.reduce((acc, v, i, xa) => (acc + v / xa.length), 0);\r\n                sems_cgpa = Object.values(b.results || {});\r\n                let y = sems_cgpa.reduce((acc, v, i, xa) => (acc + v / xa.length), 0);\r\n                if (!x) x = 999 * sort;\r\n                if (!y) y = 999 * sort;\r\n                if (x > y) {\r\n                    return sort == 1 ? 1 : -1;\r\n                }\r\n                else if (x < y)\r\n                    return sort == 1 ? -1 : 1;\r\n                else\r\n                    return 0;\r\n            });\r\n            let sR = {};\r\n            for (let data of obj)\r\n                sR[data.roll] = data;\r\n            semResult = sR;\r\n        }\r\n        else if (sortBy == -3) {\r\n            obj.sort((a, b) => {\r\n                if (a.name > b.name) {\r\n                    return sort == 1 ? 1 : -1;\r\n                }\r\n                else if (a.name < b.name)\r\n                    return sort == 1 ? -1 : 1;\r\n                else\r\n                    return 0;\r\n            });\r\n            let sR = {};\r\n            for (let data of obj)\r\n                sR[data.roll] = data;\r\n            semResult = sR;\r\n        }\r\n        this.setState(() => ({ semResult: semResult, fetchState: DONE, sort: sort, sortBy: sortBy }));\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.fetchState === DONE) {\r\n            localStorage.setItem('MultiStudentState', JSON.stringify(this.state));\r\n            //this.setState(() => ({ fetchState: IDLE }));\r\n        }\r\n        if (this.state.fetchState === FETCHING && prevState.fetchState !== FETCHING) {\r\n            let semList = \"\";\r\n            for (const i in this.state.sems)\r\n                if (this.state.sems[i] === true)\r\n                    semList += (1 + parseInt(i)).toString();\r\n            fetch(API_HOST + \"/\" + this.state.text1 + \"/\" + this.state.text2 + \"/\" + semList)\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        toast(\"Results arrived\", { type: toast.TYPE.SUCCESS });\r\n                        for (let roll in result) {\r\n                            if (!result[roll].name) {\r\n                                toast(\"Records of \" + roll + \" not Found!\", { type: toast.TYPE.INFO });\r\n                            }\r\n                        }\r\n                        //const STATE = this.state.fetchState === DONE_ANALYTICS ? DONE_ALL : DONE_SCORE;\r\n                        this.sortSems(result, this.state.sortBy, this.state.sort)\r\n                        //console.log(result);\r\n                    },\r\n                    // Note: it's important to handle errors here\r\n                    // instead of a catch() block so that we don't swallow\r\n                    // exceptions from actual bugs in components.\r\n                    (error) => {\r\n                        toast(\"Something went wrong, try changing server in menu\", { type: toast.TYPE.ERROR })\r\n                        this.setState(() => ({ fetchState: ERROR }));\r\n                        console.log(error);\r\n                    }\r\n                )\r\n        }\r\n    }\r\n    semsQueryHandler(e) {\r\n        const data = e.currentTarget.getAttribute(\"item-id\");\r\n        let update = this.state.sems;\r\n        update[data] = !update[data]\r\n        this.setState(() => ({\r\n            sems: update\r\n        }));\r\n    }\r\n    searchState(isActive) {\r\n        let apiState = this.state.fetchState;\r\n        if (apiState !== FETCHING)\r\n            apiState = IDLE;\r\n        this.setState(() => ({ input: isActive, fetchState: apiState }));\r\n    }\r\n    searchTextUpdate1(text) {\r\n        if (text.length <= 8)\r\n            this.setState(() => ({ text1: text, text2: text }));\r\n        else\r\n            this.setState(() => ({ text1: text }));\r\n    }\r\n    searchTextUpdate2(text) {\r\n\r\n        if (this.state.text1.length == 11 && text.length == 11) {\r\n            if (parseInt(text) - parseInt(this.state.text1) > 120)\r\n                toast(\"Please give range lower then 120 students\", { type: toast.TYPE.DARK })\r\n        }\r\n        this.setState(() => ({ text2: text }));\r\n    }\r\n    sortFilter(e) {\r\n        this.sortSems(this.state.semResult, this.state.sortBy, e.target.value)\r\n    }\r\n    sortProp(e) {\r\n        this.sortSems(this.state.semResult, e.target.value, this.state.sort)\r\n    }\r\n    textFilter(e) {\r\n        this.setState(() => ({ textFilter: e.target.value }));\r\n    }\r\n    checkTextFilter(grade) {\r\n        let containText = true;\r\n        if (this.state.textFilter && this.state.textFilter.length > 0) {\r\n            let filterArray = this.state.textFilter.split(\" \");\r\n            for (let filter of filterArray) {\r\n                if (filter.length > 0) {\r\n                    if (JSON.stringify(grade).toLocaleLowerCase().search(filter.replace(/[#-.]|[[-^]|[?|{}]/g, '\\\\$&').toLocaleLowerCase()) == -1) {\r\n                        containText = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return grade.name && containText;\r\n    }\r\n    boderStyle = { borderRadius: \"12px\", padding: \"16px\" };\r\n    render() {\r\n        const semsBtn = sems.map((item, index) =>\r\n            <button key={index} className={(this.state.sems[index]) ? \"toggle on\" : \"toggle off\"} onClick={this.semsQueryHandler} item-id={index}>\r\n                {item}\r\n            </button>\r\n        );\r\n        let resultState;\r\n        switch (this.state.fetchState) {\r\n            case FETCHING:\r\n                resultState = \"button active\";\r\n                break;\r\n            case DONE:\r\n                resultState = \"button finished\";\r\n                break;\r\n            default:\r\n                resultState = \"button\";\r\n        }\r\n        return (\r\n            <div className=\"search\">\r\n                <ToastContainer />\r\n                <SearchBox title=\"Enter begining ending roll number\"\r\n                    color={\"#FFFFFF\"}\r\n                    colorHint={\"#717171\"}\r\n                    spacing={(isMobile ? 3 : 8)}\r\n                    maxLength={11}\r\n                    searchTextUpdate={this.searchTextUpdate1}\r\n                    text={this.state.text1}\r\n                    searchState={this.searchState} dataText={[\"16900218001...\", \"30000118007....\"]}\r\n                    active={this.state.input} />\r\n                <SearchBox\r\n                    title={false}\r\n                    color={\"#FFFFFF\"}\r\n                    colorHint={\"#717171\"}\r\n                    spacing={(isMobile ? 3 : 8)}\r\n                    maxLength={11}\r\n                    searchTextUpdate={this.searchTextUpdate2}\r\n                    text={this.state.text2}\r\n                    searchState={this.searchState} dataText={[\"16900218001...\", \"30000118060....\"]}\r\n                    active={this.state.input} />\r\n                {this.state.text1 && this.state.text2 && this.state.fetchState !== DONE &&\r\n                    <div className=\"toolbox\">\r\n                        {semsBtn}\r\n                    </div>\r\n                }\r\n                {this.checkAnySemList() &&\r\n                    <div className=\"toolbox\" onClick={this.getRangeResult}>\r\n                        <button className={resultState}>\r\n                            <span className=\"submit\">Search</span>\r\n                            <span className=\"loading\"><img src={updateIcon} alt=\"\" /></span>\r\n                            <span className=\"check\"><img src={tickIcon} alt=\"\" /></span>\r\n                        </button>\r\n                    </div>\r\n                }\r\n                {this.state.fetchState !== FETCHING && Object.keys(this.state.semResult).length > 0 &&\r\n                    <div className=\"toolbox\">\r\n                        <span style={{ display: \"inline\", margin: \"auto 0\", fontFamily: \"'Open Sans', cursive\" }}>Sort by</span>\r\n                        <select style={this.boderStyle} value={this.state.sortBy} onChange={this.sortProp}>\r\n                            <option value={-1}>Roll number</option>\r\n                            <option value={-3}>Name</option>\r\n                            <option value={-2}>Average CGPA</option>\r\n                            {Object.keys(this.state.sems).map(i => {\r\n                                if (this.state.sems[i] === true)\r\n                                    return (<option key={i} value={i}>{sems[i]}</option>)\r\n                                return null;\r\n                            }\r\n                            )}\r\n                        </select>\r\n                        <select style={this.boderStyle} value={this.state.sort} onChange={this.sortFilter}>\r\n                            <option value={1} >Ascending</option>\r\n                            <option value={-1} >Descending</option>\r\n                        </select>\r\n                    </div>\r\n                }\r\n                {this.state.fetchState !== FETCHING && Object.keys(this.state.semResult).length > 0 &&\r\n                    <div className=\"toolbox\">\r\n                        <span style={{ display: \"inline\", margin: \"auto 40px auto 0\", fontFamily: \"'Open Sans', cursive\" }}>Filter by</span>\r\n                        <input onChange={this.textFilter} style={{ border: \"none\", minWidth: \"50%\", borderRadius: \"12px\", padding: \"16px\" }}></input>\r\n                    </div>\r\n                }\r\n                {this.state.semResult &&\r\n                    <div className=\"resultbox\">\r\n                        {Object.keys(this.state.semResult).map(roll => {\r\n                            if (this.checkTextFilter(this.state.semResult[roll]))\r\n                                return <GradeCard key={roll}\r\n                                    title={this.state.semResult[roll].name}\r\n                                    semData={this.state.semResult[roll]}\r\n                                    roll={roll}\r\n                                    singleSem={false} />\r\n                            else\r\n                                return null;\r\n                        })}\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n    checkAnySemList() {\r\n        if (this.state.text1.length == 11 && this.state.text2.length == 11) {\r\n            if (parseInt(this.state.text2) - parseInt(this.state.text1) > 120)\r\n                return false;\r\n        }\r\n        for (const i in this.state.sems)\r\n            if (this.state.sems[i] === true)\r\n                return true;\r\n        return false;\r\n    }\r\n}\r\nexport default MultiReport;","import { isMobile } from 'react-device-detect';\r\nimport Lottie from 'react-lottie-player';\r\nimport animationData from './star.json';\r\n\r\nfunction RatingBar(props){\r\n    const defaultOptions = {\r\n        loop: false,\r\n        autoplay: true,\r\n        animationData: animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: \"xMidYMid slice\"\r\n        }\r\n    };\r\n    let size = isMobile ? '70px':'80px';\r\n    return (\r\n        <div className={props.className} style={{ display: 'flex', flexDirection: 'row' }}>\r\n            {[1, 2, 3, 4, 5].map((val, index) =>\r\n                <Lottie\r\n                    key={val}\r\n                    animationData={animationData}\r\n                    options={defaultOptions}\r\n                    style={{ width: size, height: size, display: 'inline-block'}}\r\n                    play={props.count >=  val}\r\n                    loop={false}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RatingBar;","import { Component } from \"react\";\r\nimport './student.scss';\r\nimport updateIcon from \"../ToggleButton/sync.svg\";\r\nimport tickIcon from \"../ToggleButton/done.svg\";\r\nimport '../ToggleButton/toggle.scss';\r\nimport SearchBox from \"../SearchBox/SearchBox\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport GradeCard from \"../GradeCard/GradeCard\";\r\nimport RatingBar from \"../Ratings/Ratings\";\r\nimport { Area, AreaChart, Bar, BarChart, Brush, CartesianGrid, ComposedChart, Label, Legend, Line, LineChart, PolarAngleAxis, PolarGrid, PolarRadiusAxis, Radar, RadarChart, ReferenceLine, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\r\nimport { API_HOST } from \"../../Database/db\";\r\n\r\nconst sems = [\"1st sem\", \"2nd sem\", \"3rd sem\", \"4th sem\", \"5th sem\", \"6th sem\", \"7th sem\", \"8th sem\"]\r\nconst IDLE = 0;\r\nconst FETCHING = 1;\r\nconst DONE_SCORE = 2;\r\nconst DONE_ANALYTICS = 3;\r\nconst DONE_ALL = 4;\r\nconst SHOWING_DATA = 10;\r\nconst ERROR = -1;\r\nclass Student extends Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchState = this.searchState.bind(this);\r\n        this.searchTextUpdate = this.searchTextUpdate.bind(this);\r\n        this.semsQueryHandler = this.semsQueryHandler.bind(this);\r\n        this.getSingleResult = this.getSingleResult.bind(this);\r\n        this.getPercentileCallback = this.getPercentileCallback.bind(this);\r\n        let text = this.props.text || \"\";\r\n        let semsState = this.props.sems || {};\r\n        let semResult = this.props.semResult || {};\r\n        let progressChartData = this.props.progressChartData || [];\r\n        if (text !== \"\")\r\n            this.state = { input: false, text: \"\", sems: semsState, semResult: semResult, progressChartData: progressChartData, fetchState: IDLE, rating: 0, topSubjects: {}, radarGraph: null };\r\n        else {\r\n            let savedState = JSON.parse(localStorage.getItem('studentState')) ||\r\n                { input: false, text: \"\", sems: semsState, semResult: {}, progressChartData: [], fetchState: IDLE, rating: 0, topSubjects: {}, radarGraph: null };\r\n            this.state = savedState;\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        //console.log(this.state.fetchState);\r\n        if (this.state.fetchState === DONE_ALL && this.state.semResult.name) {\r\n\r\n            let rating = 0, semCount = 0, progressArray = [];\r\n            //console.log(this.state.analyticsResult);\r\n            for (let key in this.state.analyticsResult) {\r\n                let analyticsResult = this.state.analyticsResult;\r\n                let semResult = this.state.semResult;\r\n                if (['SM01', 'SM02', 'SM03', 'SM04', 'SM05', 'SM06', 'SM07', 'SM08'].includes(key)) {\r\n                    let myCGPA = parseFloat(semResult.results[key]);\r\n                    let studentBelowMe = 0, totalStudent = 0;\r\n                    semCount++;\r\n                    for (let itr of analyticsResult[key]) {\r\n                        if (myCGPA > parseFloat(itr.CGPA))\r\n                            studentBelowMe += itr.count;\r\n                        totalStudent += itr.count;\r\n                    }\r\n                    let prcntile = studentBelowMe / totalStudent;\r\n                    progressArray.push({\r\n                        \"percentile\": parseFloat((prcntile * 10 + 5).toFixed(2)),\r\n                        \"CGPA\": myCGPA,\r\n                        \"semester\": key\r\n                    })\r\n                    rating += prcntile;\r\n                }\r\n            }\r\n            rating = (rating / semCount) * 5;\r\n            //console.log(rating);\r\n            let myState = this.state;\r\n            myState.rating = rating;\r\n            myState.fetchState = SHOWING_DATA;\r\n            myState.progressChartData = progressArray;\r\n            //console.log(progressArray);\r\n            localStorage.setItem('studentState', JSON.stringify(myState));\r\n            toast(this.state.semResult.name + \" is in top \" + (100 - rating * 20).toFixed(2) + \"%\", { type: toast.TYPE.INFO });\r\n            this.setState(() => ({ rating: rating, progressChartData: progressArray, fetchState: SHOWING_DATA }))\r\n        }\r\n        else if (this.state.fetchState === FETCHING && prevState.fetchState !== FETCHING) {\r\n            let semList = \"\";\r\n            for (const i in this.state.sems)\r\n                if (this.state.sems[i] === true)\r\n                    semList += (1 + parseInt(i)).toString();\r\n            fetch(API_HOST + \"/\" + this.state.text + \"/\" + semList)\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        if (result.name) {\r\n                            toast(\"Results arrived\", { type: toast.TYPE.SUCCESS });\r\n                            for (let key in result) {\r\n                                if (result[key].info && !isNaN(key[key.length - 1])) {\r\n                                    toast(sems[key[key.length - 1] - 1] + \" results not Found!\", { type: toast.TYPE.INFO });\r\n                                }\r\n                            }\r\n                        }\r\n                        else\r\n                            toast(\"Records not Found!\", { type: toast.TYPE.ERROR });\r\n                        const STATE = this.state.fetchState === DONE_ANALYTICS ? DONE_ALL : DONE_SCORE;\r\n                        this.setState(() => ({ semResult: result, fetchState: STATE }));\r\n                        //console.log(result);\r\n                    },\r\n                    // Note: it's important to handle errors here\r\n                    // instead of a catch() block so that we don't swallow\r\n                    // exceptions from actual bugs in components.\r\n                    (error) => {\r\n                        toast(\"Something went wrong, try changing server in menu\", { type: toast.TYPE.ERROR })\r\n                        this.setState(() => ({ fetchState: ERROR }));\r\n                        //console.log(error);\r\n                    }\r\n                )\r\n            fetch(API_HOST + \"/analytics/cgpa/\" + this.state.text + \"/\" + semList)\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        const STATE = this.state.fetchState === DONE_SCORE ? DONE_ALL : DONE_ANALYTICS;\r\n                        this.setState(() => ({ analyticsResult: result, fetchState: STATE }));\r\n                        //console.log(result);\r\n                    },\r\n                    // Note: it's important to handle errors here\r\n                    // instead of a catch() block so that we don't swallow\r\n                    // exceptions from actual bugs in components.\r\n                    (error) => {\r\n                        toast(\"Something went wrong, try changing server in menu\", { type: toast.TYPE.ERROR })\r\n                        this.setState(() => ({ fetchState: ERROR }));\r\n                        //console.log(error);\r\n                    }\r\n                )\r\n        }\r\n    }\r\n    sortCGPAAnalytics(data) {\r\n        //console.log(data);\r\n        let res = [];\r\n        let min = 1000, max = 0;\r\n        for (let i of data) {\r\n            let index = parseInt(parseFloat(i.CGPA) * 100);\r\n            if (index > max)\r\n                max = index;\r\n            if (min > index)\r\n                min = index;\r\n        }\r\n        //console.log(min,max)\r\n        min = min - 1\r\n        for (let i = min; i <= max; i++) {\r\n            res[i - min] = { CGPA: (i / 100).toFixed(2), students: null }\r\n        }\r\n        for (let i of data) {\r\n            let index = parseInt(parseFloat(i.CGPA) * 100);\r\n            res[index - min] = { CGPA: (index / 100).toFixed(2), students: i.count };\r\n        }\r\n        return res;\r\n    }\r\n    getPercentileCallback(obj) {\r\n        let radar = this.state.radarGraph\r\n        if (!radar)\r\n            radar = {}\r\n        radar = Object.assign(radar, obj);\r\n        //console.log(radar);\r\n        if (this._isMounted)\r\n            this.setState(() => ({ radarGraph: radar }));\r\n    }\r\n    getSingleResult(e) {\r\n        if (this.state.fetchState !== FETCHING && this._isMounted) {\r\n            this.setState(() => ({ fetchState: FETCHING, rating: 0, topSubjects: {}, semResult: {}, radarGraph: null }));\r\n        }\r\n        else {\r\n            toast(\"Processing results. Please wait!\", { type: toast.TYPE.DARK })\r\n        }\r\n    }\r\n    searchState(isActive) {\r\n        let apiState = this.state.fetchState;\r\n        if (apiState !== FETCHING)\r\n            apiState = IDLE;\r\n        this.setState(() => ({ input: isActive, fetchState: apiState }));\r\n    }\r\n    searchTextUpdate(text) {\r\n        let apiState = this.state.fetchState;\r\n        if (apiState !== FETCHING)\r\n            apiState = IDLE;\r\n        this.setState(() => ({ text: text, fetchState: apiState }));\r\n    }\r\n    semsQueryHandler(e) {\r\n        const data = e.currentTarget.getAttribute(\"item-id\");\r\n        let update = this.state.sems;\r\n        update[data] = !update[data]\r\n        this.setState(() => ({\r\n            sems: update\r\n        }));\r\n    }\r\n    render() {\r\n        const semsBtn = sems.map((item, index) =>\r\n            <button key={index} className={(this.state.sems[index]) ? \"toggle on\" : \"toggle off\"} onClick={this.semsQueryHandler} item-id={index}>\r\n                {item}\r\n            </button>\r\n        );\r\n        let resultState;\r\n        switch (this.state.fetchState) {\r\n            case FETCHING:\r\n                resultState = \"button active\";\r\n                break;\r\n            case DONE_ALL:\r\n            case DONE_SCORE:\r\n                resultState = \"button finished\";\r\n                break;\r\n            default:\r\n                resultState = \"button\";\r\n        }\r\n        return (\r\n            <div className=\"search\">\r\n                <ToastContainer />\r\n                <SearchBox\r\n                    title=\"Search your roll number.\"\r\n                    type={\"number\"}\r\n                    color={\"#FFFFFF\"}\r\n                    colorHint={\"#717171\"}\r\n                    spacing={(isMobile ? 3 : 8)}\r\n                    searchTextUpdate={this.searchTextUpdate}\r\n                    text={this.state.text}\r\n                    searchState={this.searchState} dataText={[\r\n                        \"30000118020\",\r\n                        \"19600128033\",\r\n                        \"10000119055\",\r\n                        \"11600118025\",\r\n                        \"11700119032\",\r\n                    ]}\r\n                    active={this.state.input}\r\n                />\r\n                {(this.state.input || this.state.text) && (this.state.fetchState !== DONE_ALL || this.state.fetchState !== DONE_SCORE) &&\r\n                    <div className=\"toolbox\">\r\n                        {semsBtn}\r\n                    </div>\r\n                }\r\n                {(this.state.text.length >= 11 && this.checkAnySemList()) &&\r\n                    <div className=\"toolbox\" onClick={this.getSingleResult}>\r\n                        <button className={resultState}>\r\n                            <span className=\"submit\">Search</span>\r\n                            <span className=\"loading\"><img src={updateIcon} alt=\"\" /></span>\r\n                            <span className=\"check\"><img src={tickIcon} alt=\"\" /></span>\r\n                        </button>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.semResult && this.state.semResult.name &&\r\n                    <div className=\"resultbox\" style={{ padding: 0 }}>\r\n                        <header>\r\n                            <span className=\"title\">{this.state.semResult.name}</span>\r\n                            <span className=\"sub-title\">{this.state.semResult.registration}</span>\r\n                        </header>\r\n                    </div>\r\n                }\r\n                {this.state.rating !== 0 && this.state.semResult.name && <RatingBar count={this.state.rating + 1} className='resultbox' />}\r\n\r\n                {this.state.semResult && this.state.semResult.name && //false &&\r\n                    <div className=\"resultbox\">\r\n                        {Object.keys(this.state.semResult).map(item => {\r\n                            if (['SM01', 'SM02', 'SM03', 'SM04', 'SM05', 'SM06', 'SM07', 'SM08'].includes(item))\r\n                                return <GradeCard key={item}\r\n                                    percentileCallback={this.getPercentileCallback}\r\n                                    title={\"Sem \" + item[item.length - 1]}\r\n                                    semData={this.state.semResult[item]}\r\n                                    roll={this.state.semResult.roll}\r\n                                    semNo={item[item.length - 1]}\r\n                                    singleSem={true} />\r\n                            else\r\n                                return null;\r\n                        })}\r\n\r\n                    </div>\r\n                }\r\n                {\r\n                    this.state.radarGraph != null &&\r\n                    <div className=\"resultbox\">\r\n                        <header>\r\n                            <span className=\"title\">Subject-wise Percentile Distribution</span>\r\n                            <span className=\"sub-title\">for strong subjects identification  </span>\r\n                        </header>\r\n                        <div className=\"radarbox-container\">\r\n                            {Object.keys(this.state.radarGraph).map(val => (\r\n                                <div className=\"radarbox\" key={val}>\r\n                                    <span className=\"title\" >Semester {val}</span>\r\n                                    <ResponsiveContainer minHeight={300} maxHeight={360} width=\"32%\" minWidth={360} height=\"100%\">\r\n                                        <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"60%\" data={this.state.radarGraph[val]}>\r\n                                            <PolarGrid />\r\n                                            <PolarAngleAxis dataKey=\"subCode\" />\r\n                                            <PolarRadiusAxis />\r\n                                            <Tooltip dataKey=\"subName\" formatter={(v, k, i) => [i.payload.percentile + '%', i.payload.subName]} />\r\n                                            <Radar name=\"percentile\" dataKey=\"percentile\" stroke=\"#FF5733\" fill=\"#FF5733\" fillOpacity={0.6} />\r\n                                        </RadarChart>\r\n                                    </ResponsiveContainer>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {this.state.fetchState === SHOWING_DATA && this.state.progressChartData.length > 0 &&\r\n                    <div className=\"resultbox\">\r\n                        <header>\r\n                            <span className=\"title\">Improvement analysis</span>\r\n                            <span className=\"sub-title\">Corelate of performance per semester</span>\r\n                        </header>\r\n                        <ResponsiveContainer width=\"90%\" height={300}>\r\n                            <LineChart\r\n                                width={400}\r\n                                height={300}\r\n                                data={this.state.progressChartData}\r\n                            >\r\n                                <YAxis tick={false}/>\r\n                                <XAxis dataKey=\"semester\"/>\r\n                                <Tooltip formatter={(v, k, i) => [(k === 'percentile') ? ((v - 5) * 10).toFixed(2) + \"%\" : v, k]} />\r\n                                <Legend />\r\n                                <Line type=\"monotone\" dataKey=\"CGPA\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n                                <Line type=\"linear\" dataKey=\"percentile\" dataText=\"percentile\" stroke=\"#82ca9d\" />\r\n                            </LineChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                }\r\n                {this.state.fetchState === SHOWING_DATA && !this.state.analyticsResult.info &&\r\n                    <div className=\"resultbox\">\r\n                        <header>\r\n                            <span className=\"title\">Semester analytics</span>\r\n                            <span className=\"sub-title\">Marks distrubition per semester of all students (past and current) on the same course</span>\r\n                        </header>\r\n                        {\r\n                            Object.keys(this.state.analyticsResult).map(key => {\r\n                                if (['SM01', 'SM02', 'SM03', 'SM04', 'SM05', 'SM06', 'SM07', 'SM08'].includes(key)) {\r\n                                    return (\r\n                                        <ResponsiveContainer key={key} minHeight={380} width=\"90%\" height=\"100%\">\r\n                                            <ComposedChart zoomAndPan=\"true\"\r\n                                                data={this.sortCGPAAnalytics(this.state.analyticsResult[key])}>\r\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                                <XAxis height={60} dataKey=\"CGPA\" label={{ value: \"Semester \" + key[key.length - 1] + \" CGPA\", position: \"outsideTopMiddle\", dx: 0, dy: 13 }} />\r\n                                                <YAxis label={{ value: \"Students Count\", position: \"outsideMiddle\", angle: -90, dx: -20 }} />\r\n                                                <Tooltip />\r\n                                                <ReferenceLine x={this.state.semResult.results[key]} stroke=\"black\" strokeWidth=\"4px\"\r\n                                                    label={<Label position=\"insideRight\" value={this.state.semResult.name} />}\r\n                                                />\r\n                                                <Bar dataKey=\"students\" fill=\"#FF5733\" stroke=\"#FF5733\" />\r\n                                                <Area connectNulls={true} type=\"basis\" dataKey=\"students\" fill=\"#FF573380\" stroke=\"#FF5733\" />\r\n                                                <Brush dataKey=\"name\" height={30} stroke=\"#FF5733\" />\r\n                                            </ComposedChart >\r\n                                        </ResponsiveContainer>\r\n                                    )\r\n                                }\r\n                                else\r\n                                    return null;\r\n                            })\r\n                        }\r\n                    </div>\r\n                }\r\n\r\n                {this.state.semResult && this.state.semResult.name &&\r\n                    <footer>\r\n                        <span>{this.state.semResult.collegeName}</span>\r\n                    </footer>\r\n                }\r\n            </div>\r\n\r\n        );\r\n    }\r\n    checkAnySemList() {\r\n        for (const i in this.state.sems)\r\n            if (this.state.sems[i] === true)\r\n                return true;\r\n        return false;\r\n    }\r\n}\r\nexport default Student;","export default __webpack_public_path__ + \"static/media/result-prev.fcf063a6.png\";","export default __webpack_public_path__ + \"static/media/sub-res.c0be9b9a.png\";","export default __webpack_public_path__ + \"static/media/distribution.d0cbe2be.png\";","export default __webpack_public_path__ + \"static/media/student-comp.145d8fa5.png\";","export default __webpack_public_path__ + \"static/media/multi-prev.9f3f3ed3.png\";","export default __webpack_public_path__ + \"static/media/college-analytics.9ed57aab.png\";","export default __webpack_public_path__ + \"static/media/sub-analytics.4cd649d6.png\";","import colleges from '../../Database/db';\r\nimport RatingBar from '../Ratings/Ratings';\r\nimport Typer from '../Typer/Typer'\r\nimport './home.scss'\r\nimport resultPreviewImg from './result-prev.png'\r\nimport subPreviewImg from './sub-res.png'\r\nimport distImg from './distribution.png'\r\nimport studentComp from './student-comp.png'\r\nimport multiRepImg from './multi-prev.png'\r\nimport collegeAnalytiycs from './college-analytics.png'\r\nimport subAnalytiycs from './sub-analytics.png'\r\nimport { Area, AreaChart, Bar, BarChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nfunction Home(props) {\r\n    const data = [\r\n        {\r\n            name: 'Page A',\r\n            uv: 4000,\r\n            pv: 2400,\r\n            amt: 2400,\r\n        },\r\n        {\r\n            name: 'Page B',\r\n            uv: 3000,\r\n            pv: 1398,\r\n            amt: 2210,\r\n        },\r\n        {\r\n            name: 'Page C',\r\n            uv: 2000,\r\n            pv: 9800,\r\n            amt: 2290,\r\n        },\r\n        {\r\n            name: 'Page D',\r\n            uv: 2780,\r\n            pv: 3908,\r\n            amt: 2000,\r\n        },\r\n        {\r\n            name: 'Page E',\r\n            uv: 1890,\r\n            pv: 4800,\r\n            amt: 2181,\r\n        },\r\n        {\r\n            name: 'Page F',\r\n            uv: 2390,\r\n            pv: 3800,\r\n            amt: 2500,\r\n        },\r\n        {\r\n            name: 'Page G',\r\n            uv: 3490,\r\n            pv: 4300,\r\n            amt: 2100,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div id=\"home\">\r\n\r\n            <header >\r\n                <span className=\"title\">Grade Card Analyzer!</span>\r\n                <text>works with</text>\r\n                <Typer className=\"typer\" color=\"black\" dataText={Object.values(colleges)} spacing={3} />\r\n                <hr style={{ width: '10%', margin: '24px auto' }} />\r\n                <p style={{ margin: 'auto', color:\"red\"}}>IMPORTAMT NOTICE: MAKAUT CHANGED THEIR RESULT WEBSITE TO <a href=\"https://makaut.mastersofterp.in\">MASTERSOFTERP</a>. IT WILL NOT WORK FOR RESULTS AFTER 2022, I WILL ADD OPTIONS FOR UPLOADING THE PDF DIRECTLY TO GET ANALYTICS</p>\r\n                <div className=\"flex\">\r\n                    <img src={resultPreviewImg}></img>\r\n                    <div style={{ display: 'inline-grid', margin: '32px 24px' }}>\r\n                        <span>MAKAUT STUDENT REPORT</span>\r\n                        <text>This is an analytics tool for your semester results as well as a rating card for your profile.\r\n                            It works for most of the MAKAUT colleges and shows your results and various analytics data like\r\n                            with Bar Chart per subjects showing your CGPA amongst everyone's performance, individual\r\n                            subject reports and overall semester percentile from <a>MAKAUT API</a></text>\r\n                    </div>\r\n                </div>\r\n                <hr style={{ width: '10%', margin: '24px auto' }} />\r\n                <div className=\"flex\">\r\n                    <span># The Rating System</span>\r\n                    <RatingBar count={Math.floor(Math.random() * 3) + 3} />\r\n                    <p>The better the <b>PERCENTILE</b> the better the <b>RATING</b>. The CGPA of each selected semester is evaluated amongst all the\r\n                        students of the same course and the average percentile is calculated, 5 🌟 the student is academically better then 80% of the crowd,\r\n                        4 🌟 is better then 60% and so on...</p>\r\n                    <div style={{ display: 'inline-grid', margin: '32px 24px' }}>\r\n                        <span>The Subject Radar</span>\r\n                        <text>One may get 10 CGPA easily in one subject and struggle for 7 CGPA on other. But with The recruiter can under-estimate your hard work\r\n                            as you dont have a perfect 10 on your card. This is where percentile based marks can be helpful to show the percentage of people you are\r\n                            better then.The Subject Radar shows you your percentile based score to help you get more meaningfully results\r\n                        </text>\r\n                    </div>\r\n\r\n                    <img src={subPreviewImg}></img>\r\n\r\n                    <div style={{ height: '32px', width: '100%' }}></div>\r\n\r\n                    <img src={distImg}></img>\r\n                    <div style={{ display: 'inline-grid', margin: '32px 24px' }}>\r\n                        <span>Semester Analytics</span>\r\n                        <text>This is an analytics tool for your semester results! It works for most of the MAKAUT colleges and shows your results\r\n                            with Bar Chart per subjects showing your CGPA amongst everyone's performance from <a>MAKAUT API</a></text>\r\n                    </div>\r\n                    <div style={{ height: '64px', width: '100%' }}></div>\r\n                </div>\r\n                <span className=\"\">Multi Report</span>\r\n                <hr style={{ width: '10%', margin: '24px auto' }} />\r\n                <div className=\"flex\">\r\n                    <img src={multiRepImg}></img>\r\n                    <div style={{ display: 'inline-grid', margin: '32px 24px' }}>\r\n                        <span>Get the whole class results!</span>\r\n                        <text>Just put the beginning and ending roll number of any batch and the results are at\r\n                            you finger tips! Sort the results by various parameters and find the Topper or the bottom ranker see your place amongst all</text>\r\n                    </div>\r\n                    <div style={{ height: '32px', width: '100%' }}></div>\r\n                    <img src={studentComp}></img>\r\n                    <div style={{ display: 'inline-grid', margin: '32px 24px' }}>\r\n                        <span>Compare student on the go!</span>\r\n                        <text>Add students from same or different institutes batches or even years! it will show you relevant parameters and charts to give you a brief comparison reliably and fast</text>\r\n                    </div>\r\n                </div>\r\n                <div style={{ height: '52px', width: '100%' }}></div>\r\n                <span className=\"title\">Institutional Analytics</span>\r\n                <hr style={{ width: '10%', margin: '24px auto' }} />\r\n                <div className=\"flex\">\r\n                    <div style={{ display: 'inline-grid', margin: '32px 24px' }}>\r\n                        <span>College Analytics!</span>\r\n                        <text>It shows you the performance metrics of different colleges, their subjects and the student batches. \r\n                            It detects the exam and This indicates the possibility of question paper being too easy or uncovered \r\n                            syllabus by the organization, question paper with out of syllabus questions or an excessively lengthy \r\n                            question paper and  lack of communication of students with teaching faculty</text>\r\n                    </div>\r\n                    <img src={collegeAnalytiycs}></img>\r\n                    <div style={{ display: 'inline-grid', margin: '32px 24px' }}>\r\n                        <span>Subject performance for faculty!</span>\r\n                        <text>Shows you the batch wise data for a particular subject for different colleges. Helps finding the average performance and subject teaching quality improvements each year</text>\r\n                    </div>\r\n                    <img src={subAnalytiycs}></img>\r\n                </div>\r\n            </header>\r\n            <footer>\r\n                <span className=\"title\">A project on <img className=\"rotate\" src=\"https://github.com/prasannathapa/reportcard/raw/master/public/logo192.png\"></img>\r\n                    and <img src=\"https://github.com/prasannathapa/reportcard/raw/master/public/nodejs.png\"></img> by <a href=\"https://prasanna-thapa.herokuapp.com/\" target=\"_blank\">Prasanna Thapa</a></span>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import Lottie from 'react-lottie-player';\r\nimport animationData from './construction.json';\r\nfunction NotImplemented() {\r\n    const defaultOptions = {\r\n        loop: false,\r\n        autoplay: true,\r\n        animationData: animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: \"xMidYMid slice\"\r\n        }\r\n    };\r\n    return (\r\n        <div style={{ height: '100%', alignItems: 'center', display: \"flex\" }}>\r\n            <Lottie\r\n                animationData={animationData}\r\n                options={defaultOptions}\r\n                style={{ width: 360, height: 360, margin:'auto'}}\r\n                play\r\n                loop\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default NotImplemented;","export default __webpack_public_path__ + \"static/media/delete.b529109f.svg\";","import { Component } from \"react\";\r\nimport './SearchList.scss';\r\nimport deleteIcon from './icon/delete.svg';\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nclass SearchList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.listItemClicked = this.listItemClicked.bind(this);\r\n        let internalList = {};\r\n        for (let i in props.list)\r\n            internalList[i] = false;\r\n        this.state = { selectedList: internalList, numberOfselection: 0 }\r\n    }\r\n\r\n    listItemClicked(event, key) {\r\n\r\n        let list = this.state.selectedList;\r\n        let total = this.state.numberOfselection;\r\n        let selectedStatus = list[key];\r\n        let maxSelection = this.props.maxSelection || Number.POSITIVE_INFINITY;\r\n        if ((maxSelection > total && !selectedStatus) || selectedStatus) {\r\n            list[key] = !selectedStatus;\r\n            this.props.ItemClickUpdate(key, !selectedStatus, total);\r\n            total += selectedStatus ? -1 : 1;\r\n            this.setState({ selectedList: list, numberOfselection: total });\r\n        } else {\r\n            let msg = this.props.maxLimitReachMsg || \"You can only select \" + this.props.maxSelection + \" items atmost\";\r\n            toast(msg, { type: toast.TYPE.ERROR })\r\n\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"college-list\">\r\n                    <ToastContainer />\r\n                    {Object.entries(this.props.list).map(([k, v]) => {\r\n                        if (this.state.selectedList[k] ||\r\n                            v.toLocaleLowerCase().search((this.props.filterText.replace(/[#-.]|[[-^]|[?|{}]/g, '\\\\$&') || \"#\").toLocaleLowerCase()) != -1 ||\r\n                            k.toLocaleLowerCase().search((this.props.filterText.replace(/[#-.]|[[-^]|[?|{}]/g, '\\\\$&') || \"#\").toLocaleLowerCase()) != -1)\r\n                            return (\r\n                                <div key={k} className=\"item-container\" onClick={e => this.listItemClicked(e, k)}>\r\n                                    <div>{v}</div>\r\n                                    {(this.state.selectedList[k] ||  this.props.allAlwaysSelected) &&\r\n                                        <img className=\"search-logo\" alt=\"search icon\" src={deleteIcon} />\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        else\r\n                            return null;\r\n                    })}\r\n                    {!isMobile && !this.props.hideGradient &&\r\n                        <div style={{ height: \"50px\" }}></div>\r\n                    }\r\n                </div>\r\n                {!isMobile && !this.props.hideGradient &&\r\n                    <div className=\"gradientback\"></div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SearchList;","export default __webpack_public_path__ + \"static/media/info.6b785554.svg\";","import React, { Component, Fragment } from \"react\";\r\nimport SearchBox from \"../SearchBox/SearchBox\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport colleges, { API_HOST, course_code } from \"../../Database/db\";\r\nimport './CollegeReport.scss'\r\nimport SearchList from \"../SearchList/SearchList\";\r\nimport '../Student/student.scss';\r\nimport updateIcon from \"../ToggleButton/sync.svg\";\r\nimport tickIcon from \"../ToggleButton/done.svg\";\r\nimport infoIcon from \"./icons/info.svg\";\r\nimport { Bar, BarChart, Brush, CartesianGrid, Cell, Legend, Pie, PieChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\r\nconst IDLE = 0;\r\nconst DONE = 10;\r\nconst FETCHING = 1;\r\nconst DONE_SCORE = 2;\r\nconst DONE_ALL = 4;\r\nclass CollegeReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchTextUpdate = this.searchTextUpdate.bind(this);\r\n        this.searchState = this.searchState.bind(this);\r\n        this.selectYear = this.selectYear.bind(this);\r\n        this.selectCourse = this.selectCourse.bind(this);\r\n        this.ItemClickUpdate = this.ItemClickUpdate.bind(this);\r\n        this.getCollegeResult = this.getCollegeResult.bind(this);\r\n        let savedState = { input: false, text: \"\", fetchState: IDLE, collegeCode1: -1, collegeCode2: -1 };\r\n        this.state = savedState;\r\n    }\r\n    generateStandardDeviationReport(data) {\r\n        const sd_low_thres = 0.7;\r\n        const sd_high_thres = 1.8;\r\n        const cgpa_low_thres = 5.8;\r\n        const cgpa_high_thres = 7.5;\r\n        const insuff_data_thres = 7;\r\n        for (const batch in data.data) {\r\n            for (const Subject in data.data[batch]) {\r\n                for (const sem in data.data[batch][Subject]) {\r\n                    let lowDeviationHighMarks = \"\";\r\n                    let lowDeviationLowMarks = \"\";\r\n                    let highDeviationData = \"\";\r\n                    let lessdata = \"\";\r\n                    for (const subjectData of data.data[batch][Subject][sem]) {\r\n                        if (subjectData.pass + subjectData.fail < insuff_data_thres) {\r\n                            lessdata += (data.subjectMap[subjectData.code] || subjectData.code) + \", \";\r\n                        }\r\n                        else if (subjectData.standardDeviation < sd_low_thres) {\r\n                            if (subjectData.averageCGPA >= cgpa_high_thres) {\r\n                                lowDeviationHighMarks += (data.subjectMap[subjectData.code] || subjectData.code) + \", \";\r\n                            } else if (subjectData.averageCGPA <= cgpa_low_thres) {\r\n                                lowDeviationLowMarks = lowDeviationLowMarks + (data.subjectMap[subjectData.code] || subjectData.code) + \", \";\r\n                            }\r\n                        }\r\n                        else if (subjectData.standardDeviation > sd_high_thres) {\r\n                            highDeviationData = highDeviationData + (data.subjectMap[subjectData.code] || subjectData.code) + \", \";\r\n                        }\r\n                    }\r\n\r\n                    highDeviationData = highDeviationData.slice(0, -2).trim();\r\n                    lowDeviationHighMarks = lowDeviationHighMarks.slice(0, -2).trim();\r\n                    lowDeviationLowMarks = lowDeviationLowMarks.slice(0, -2).trim();\r\n                    lessdata = lessdata.slice(0, -2).trim();\r\n                    let a, b, c, d;\r\n                    if (lowDeviationHighMarks.length > 1) {\r\n                        a = <Fragment>\r\n                            The subjects: <bold>{lowDeviationHighMarks}</bold> seems to have very low standard deviation (less than {sd_low_thres} ) with high class average (more than {cgpa_high_thres} ).\r\n                            This indicates the possibility of question paper being too easy or possible security compromise in exam halls. <br></br>\r\n                        </Fragment>\r\n                    }\r\n                    if (lowDeviationLowMarks.length > 1) {\r\n                        b = <Fragment>\r\n                            The data shows that the entire batch is not performing well in <bold>{lowDeviationLowMarks}</bold>\r\n                            as it has very low standard deviation (less than {sd_low_thres} ) with low class average (less than {cgpa_low_thres} ). The reason can be uncovered syllabus by the organization, question paper with out of syllabus questions or an excessively lengthy question paper.<br></br>\r\n                        </Fragment>\r\n                    }\r\n                    if (highDeviationData.length > 1) {\r\n                        c = <Fragment>\r\n                            Students having <bold>{highDeviationData}</bold>\r\n                            has a very much dispersed performance than normal (these subjects had a standard deviation of more than  {sd_high_thres} ) which might be caused by lack of communication of students with teaching faculty or most students is being mostly not present in the lectures.<br></br>\r\n                        </Fragment>\r\n\r\n                    }\r\n                    if (lessdata.length > 1) {\r\n                        d = <Fragment>\r\n                            Note: conclusions on <bold>{lessdata}</bold> have been ignored due to less data available\r\n                        </Fragment>\r\n                    }\r\n                    if (a || b || c || d)\r\n                        data.studentCount[batch][Subject][sem].report = <p>{a}{b}{c}{d}</p>;\r\n                }\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n    searchState(isActive) {\r\n        let apiState = this.state.fetchState;\r\n        if (apiState !== FETCHING)\r\n            apiState = IDLE;\r\n        this.setState(() => ({ input: isActive, fetchState: apiState }));\r\n    }\r\n    searchTextUpdate(text) {\r\n        this.setState(() => ({ text: text }));\r\n    }\r\n    ItemClickUpdate(id, isActive) {\r\n        let cc1 = this.state.collegeCode1;\r\n        let cc2 = this.state.collegeCode2;\r\n        if (isActive) {\r\n            if (cc1 == -1)\r\n                cc1 = id;\r\n            else\r\n                cc2 = id;\r\n        } else {\r\n            if (cc1 == id) {\r\n                cc1 = cc2;\r\n                cc2 = -1;\r\n            }\r\n            else\r\n                cc2 = -1;\r\n        }\r\n        this.setState({ collegeCode1: cc1, collegeCode2: cc2, text: \"\", data1: null, fetchState: IDLE });\r\n    }\r\n    isCollegeCompare() {\r\n        return (this.state.collegeCode1 != -1 && this.state.collegeCode2 != -1);\r\n    }\r\n    getCollegeResult() {\r\n        \r\n        let cc1 = this.state.collegeCode1;\r\n        let cc2 = this.state.collegeCode2;\r\n        if (cc2 == -1 && cc1 != -1) {\r\n            this.setState({ fetchState: FETCHING });\r\n            fetch(API_HOST + \"/analytics/college/\" + cc1)\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    result = this.generateStandardDeviationReport(result);\r\n                    let selectedYear = Object.keys(result.data)[0];\r\n                    this.setState({\r\n                        data1: result, fetchState: DONE,\r\n                        selectedYear: selectedYear,\r\n                        selectedCourse: Object.keys(result.data[selectedYear])[0]\r\n                    });\r\n                });\r\n        }\r\n        else if(cc1 != -1 && cc2 != -2){\r\n            toast(\"Functionality not implemented yet\", { type: toast.TYPE.INFO })\r\n        }\r\n    }\r\n    selectYear(e) {\r\n        let result = this.state.data1;\r\n        let yr = e.target.value;\r\n        this.setState({ selectedYear: yr, selectedCourse: Object.keys(result.data[yr])[0] })\r\n    }\r\n    selectCourse(e) {\r\n        this.setState({ selectedCourse: e.target.value });\r\n    }\r\n    render() {\r\n        let resultState;\r\n        switch (this.state.fetchState) {\r\n            case FETCHING:\r\n                resultState = \"button active\";\r\n                break;\r\n            case DONE_ALL:\r\n            case DONE_SCORE:\r\n                resultState = \"button finished\";\r\n                break;\r\n            default:\r\n                resultState = \"button\";\r\n        }\r\n        let titleMsgSrchBox = (this.state.collegeCode1 != -1) ?\r\n            \"Compare with other instition or get solo report\" : \"Enter College name or College Code\";\r\n        const RADIAN = Math.PI / 180;\r\n        const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n            const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n            return (\r\n                <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n                    {`${(percent * 100).toFixed(0)}%`}\r\n                </text>\r\n            );\r\n        };\r\n        const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#F652A0', '#4C5270', '#36EEE0', '#B13EC1', '#ffbc75'];\r\n        return (\r\n            <div className=\"search\">\r\n                <ToastContainer />\r\n                {this.isCollegeCompare() &&\r\n                    <h2>College Comparision</h2>\r\n                }\r\n                {!this.isCollegeCompare() && this.state.fetchState == IDLE &&\r\n                    <SearchBox title={titleMsgSrchBox}\r\n                        color={\"#FFFFFF\"}\r\n                        colorHint={\"#717171\"}\r\n                        spacing={(isMobile ? 1 : 2)}\r\n                        maxLength={100}\r\n                        searchTextUpdate={this.searchTextUpdate}\r\n                        text={this.state.text}\r\n                        searchState={this.searchState} dataText={Object.values(colleges)}\r\n                        active={this.state.input} />\r\n                }\r\n                <SearchList\r\n                    filterText={this.state.text}\r\n                    list={colleges}\r\n                    ItemClickUpdate={this.ItemClickUpdate}\r\n                    maxSelection={2}\r\n                    hideGradient={this.state.fetchState == DONE}\r\n                    maxLimitReachMsg={\"You can only select 2 colleges at maximun to compare\"} />\r\n\r\n                {this.state.collegeCode1 != -1 && this.state.fetchState != DONE &&\r\n                    <div className=\"toolbox\" onClick={this.getCollegeResult}>\r\n                        <button className={resultState}>\r\n                            <span className=\"submit\">show stats</span>\r\n                            <span className=\"loading\"><img src={updateIcon} alt=\"\" /></span>\r\n                            <span className=\"check\"><img src={tickIcon} alt=\"\" /></span>\r\n                        </button>\r\n                    </div>\r\n                }\r\n                {this.state.data1 && !this.state.data2 &&\r\n                    <div className=\"resultbox\">\r\n                        <span style={{ display: \"inline\", margin: \"auto 10px auto 0\", fontFamily: \"'Open Sans', cursive\" }}>Filter Subject</span>\r\n                        <select value={this.state.selectedCourse} onChange={this.selectCourse}>\r\n                            {Object.keys(this.state.data1.data[this.state.selectedYear]).map(k => {\r\n                                return (<option key={k} value={k}>{course_code[k]}</option>)\r\n                            })\r\n                            }\r\n                        </select>\r\n                        <span style={{ display: \"inline\", margin: \"auto 0\", fontFamily: \"'Open Sans', cursive\" }}>batch of</span>\r\n                        <select value={this.state.selectedYear} onChange={this.selectYear}>\r\n                            {Object.keys(this.state.data1.data).map(i => {\r\n                                return (<option key={i} value={i}>{i}</option>)\r\n                            })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                }\r\n                {this.state.data1 && !this.state.data2 &&\r\n                    <div className=\"resultbox\">\r\n                        {Object.keys(this.state.data1.data[this.state.selectedYear][this.state.selectedCourse]).map(key => {\r\n                            if (['SM01', 'SM02', 'SM03', 'SM04', 'SM05', 'SM06', 'SM07', 'SM08'].includes(key)) {\r\n                                return (\r\n                                    <div key={key} className=\"resultbox\">\r\n                                        <h3>Semester {key[3]} data</h3>\r\n                                        <header>\r\n                                            <div style={{ display: \"block\", Height: \"400px\", minWidth: \"60vw\" }}>\r\n                                                <div className=\"resultbox\" style={{ flex: \"1\", minWidth: \"360px\", display: \"block\" }}>\r\n                                                    <ResponsiveContainer key={key + \"graph1\"} minHeight={380} width=\"90%\" height={400}>\r\n                                                        <BarChart width={isMobile ? 330 : 550} height={250} data={this.state.data1.data[this.state.selectedYear][this.state.selectedCourse][key]}>\r\n                                                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                                            <XAxis dataKey=\"code\" />\r\n                                                            <YAxis />\r\n                                                            <Tooltip />\r\n                                                            <Legend />\r\n                                                            <Bar dataKey=\"pass\" fill=\"#82ca9d\" />\r\n                                                            <Bar dataKey=\"fail\" fill=\"#ff1d1d\" />\r\n                                                            <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\r\n                                                        </BarChart>\r\n                                                    </ResponsiveContainer>\r\n                                                    <ResponsiveContainer key={key + \"graph2\"} minHeight={380} width=\"90%\" height={400}>\r\n                                                        <BarChart width={isMobile ? 330 : 550} height={250} data={this.state.data1.data[this.state.selectedYear][this.state.selectedCourse][key]}>\r\n                                                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                                            <XAxis dataKey=\"code\" />\r\n                                                            <YAxis />\r\n                                                            <Tooltip />\r\n                                                            <Legend />\r\n                                                            <Bar dataKey=\"lowestCGPA\" fill=\"#ff1d1d\" />\r\n                                                            <Bar dataKey=\"averageCGPA\" fill=\"#8884d8\" />\r\n                                                            <Bar dataKey=\"highestCGPA\" fill=\"#82ca9d\" />\r\n                                                            <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\r\n                                                        </BarChart>\r\n                                                    </ResponsiveContainer>\r\n                                                </div>\r\n                                            </div>\r\n                                        </header>\r\n                                        <header>\r\n                                            <div className=\"resultbox\" style={{ flex: \"1\", minWidth: \"360px\", display: \"block\" }}>\r\n                                                <div className=\"badge mxw300\">\r\n                                                    <img src={infoIcon}></img>\r\n                                                    <p>Data based on <bold>{this.state.data1.studentCount[this.state.selectedYear][this.state.selectedCourse][key].total}</bold> students in rolled in {course_code[this.state.selectedCourse]} of {this.state.selectedYear}</p>\r\n                                                </div>\r\n                                                <ResponsiveContainer key={key + \"graph3\"} minHeight={380} height={600}>\r\n                                                    <PieChart width={340} height={600}>\r\n                                                        <Pie data=\r\n                                                            {\r\n                                                                this.state.data1.data[this.state.selectedYear][this.state.selectedCourse][key]\r\n                                                            }\r\n                                                            dataKey=\"fail\" nameKey=\"code\" cx=\"50%\" cy=\"50%\" outerRadius={90} fill=\"#8884d8\"\r\n                                                            label={renderCustomizedLabel} >\r\n                                                            {this.state.data1.data[this.state.selectedYear][this.state.selectedCourse][key].map((entry, index) => (\r\n                                                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                                            ))}\r\n                                                        </Pie>\r\n                                                        <Pie data={[\r\n                                                            {\r\n                                                                \"name\": \"Pass\",\r\n                                                                \"data\": this.state.data1.studentCount[this.state.selectedYear][this.state.selectedCourse][key].pass\r\n                                                            },\r\n                                                            {\r\n                                                                \"name\": \"Fail\",\r\n                                                                \"data\": this.state.data1.studentCount[this.state.selectedYear][this.state.selectedCourse][key].fail\r\n                                                            },\r\n                                                        ]}\r\n                                                            dataKey=\"data\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" innerRadius={95} outerRadius={120} fill=\"#82ca9d\" label >\r\n                                                            <Cell key={'cell-0'} fill={\"#82ca9d\"} />\r\n                                                            <Cell key={'cell-1'} fill={\"#ff1d1d\"} />\r\n                                                        </Pie>\r\n                                                        <Tooltip />\r\n                                                        <Legend />\r\n                                                    </PieChart>\r\n                                                </ResponsiveContainer>\r\n                                            </div>\r\n                                        </header>\r\n                                        {this.state.data1.studentCount[this.state.selectedYear][this.state.selectedCourse][key].report != undefined &&\r\n                                            <div className=\"badge mxw90p\">\r\n                                                {this.state.data1.studentCount[this.state.selectedYear][this.state.selectedCourse][key].report}\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            else\r\n                                return null;\r\n                        })\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CollegeReport;","import { Component } from \"react\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport SearchBox from \"../SearchBox/SearchBox\";\r\nimport updateIcon from \"../ToggleButton/sync.svg\";\r\nimport tickIcon from \"../ToggleButton/done.svg\";\r\nimport SearchList from \"../SearchList/SearchList\";\r\nimport { API_HOST, colors } from \"../../Database/db\";\r\nimport { Bar, BarChart, ComposedChart, Legend, Line, ResponsiveContainer, Tooltip, XAxis } from \"recharts\";\r\n\r\nconst sems = [\"1st sem\", \"2nd sem\", \"3rd sem\", \"4th sem\", \"5th sem\", \"6th sem\", \"7th sem\", \"8th sem\"]\r\nconst IDLE = 0;\r\nconst FETCHING = 1;\r\nconst DONE_SCORE = 2;\r\nconst DONE_ANALYTICS = 3;\r\nconst DONE_ALL = 4;\r\nconst SHOWING_DATA = 10;\r\nconst ERROR = -1;\r\nconst offset = Math.floor(Math.random() * 101);\r\n\r\nclass StudentCompare extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchState = this.searchState.bind(this);\r\n        this.semsQueryHandler = this.semsQueryHandler.bind(this);\r\n        this.searchTextUpdate = this.searchTextUpdate.bind(this);\r\n        this.addStudent = this.addStudent.bind(this);\r\n        this.ItemClickUpdate = this.ItemClickUpdate.bind(this);\r\n        this.getData = this.getData.bind(this);\r\n        let mySavedState = JSON.parse(localStorage.getItem('Student_comparasion_state') || \"{}\");\r\n        if (JSON.stringify(mySavedState) !== \"{}\")\r\n            this.state = mySavedState;\r\n        else\r\n            this.state = { input: false, text: \"\", fetchState: IDLE, studentList: [], sems: [] }\r\n    }\r\n    searchState(isActive) {\r\n        let apiState = this.state.fetchState;\r\n        if (apiState !== FETCHING)\r\n            apiState = IDLE;\r\n        this.setState({ input: isActive, fetchState: apiState });\r\n    }\r\n    searchTextUpdate(updatedText) {\r\n        this.setState({ text: updatedText });\r\n    }\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    addStudent() {\r\n\r\n        if (this.state.fetchState !== FETCHING && this._isMounted) {\r\n            let studentList = this.state.studentList;\r\n            if (!studentList.includes(this.state.text))\r\n                studentList.push(this.state.text);\r\n            this.setState({ fetchState: IDLE, text: \"\", input: false, studentList: studentList });\r\n        }\r\n        else {\r\n            toast(\"Processing results. Please wait!\", { type: toast.TYPE.DARK })\r\n        }\r\n    }\r\n    ItemClickUpdate(key) {\r\n        let studentList = this.state.studentList;\r\n        studentList.splice(key, 1);\r\n        this.setState({ studentList: studentList });\r\n    }\r\n    semsQueryHandler(e) {\r\n        const data = e.currentTarget.getAttribute(\"item-id\");\r\n        let update = this.state.sems;\r\n        update[data] = !update[data]\r\n        this.setState(() => ({\r\n            sems: update,\r\n            fetchState: IDLE\r\n        }));\r\n    }\r\n    getPercentile(data, cgpa) {\r\n        //console.log(data, cgpa);\r\n        cgpa = parseFloat(cgpa) / 10;\r\n        let studentBelowMe = 0, total = 0;\r\n        for (let item of data) {\r\n            if (parseFloat(item.CGPA) < cgpa)\r\n                studentBelowMe += item.count\r\n            total += item.count;\r\n        }\r\n        return ((studentBelowMe / total) * 100).toFixed(2) * 1;\r\n    }\r\n    async getStudentStats(idx, semesterProgressAnalyticsArray,subjectPercentileAnalyticsArray,nameMap,semList) {\r\n        let roll = this.state.studentList[idx];\r\n        let studentdata = await fetch(API_HOST + \"/\" + roll + \"/\" + semList)\r\n            .then(res => res.json());\r\n        if (studentdata.results) {\r\n            for (let i in semesterProgressAnalyticsArray) {\r\n                let sem = semesterProgressAnalyticsArray[i].name;\r\n                semesterProgressAnalyticsArray[i][roll + \"'s CGPA\"] = (studentdata.results[sem] * 10).toFixed(3) * 1;\r\n            }\r\n        }\r\n        if (studentdata.name)\r\n            nameMap[roll] = studentdata.name;\r\n        else {\r\n            toast(roll + \"'s data not found!\", { type: toast.TYPE.DARK });\r\n            let list = this.state.studentList;\r\n            list.splice(idx, 1);\r\n            this.setState({ fetchState: FETCHING, savedStudentList: list });\r\n            return;\r\n        }\r\n        for (let key of [\"SM01\", \"SM02\", \"SM03\", \"SM04\", \"SM05\", \"SM06\", \"SM07\", \"SM08\"]) {\r\n            if (key in studentdata) {\r\n                if (!studentdata[key].info) {\r\n                    for (let subCode in studentdata[key]) {\r\n                        let found = false;\r\n                        for (let i in subjectPercentileAnalyticsArray) {\r\n                            if (subjectPercentileAnalyticsArray[i].name === subCode) {\r\n                                found = true;\r\n                                subjectPercentileAnalyticsArray[i][roll + \"'s CGPA\"] = studentdata[key][subCode].CGPA * 10;\r\n                            }\r\n                        }\r\n                        if (!found) {\r\n                            subjectPercentileAnalyticsArray.push({\r\n                                \"name\": subCode,\r\n                                \"subjectName\": studentdata[key][subCode].subjectName,\r\n                                [roll + \"'s CGPA\"]: studentdata[key][subCode].CGPA * 10,\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let cgpaData = await fetch(API_HOST + \"/analytics/cgpa/\" + roll + \"/\" + semList)\r\n            .then(res => res.json());\r\n        if (!cgpaData.error) {\r\n            for (let key of [\"SM01\", \"SM02\", \"SM03\", \"SM04\", \"SM05\", \"SM06\", \"SM07\", \"SM08\"]) {\r\n                if (key in cgpaData) {\r\n                    for (let i in semesterProgressAnalyticsArray) {\r\n                        if (semesterProgressAnalyticsArray[i].name === key) {\r\n                            semesterProgressAnalyticsArray[i][roll + \"'s PCTL\"] =\r\n                                this.getPercentile(cgpaData[key],\r\n                                    semesterProgressAnalyticsArray[i][roll + \"'s CGPA\"]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let subjectData = await fetch(API_HOST + \"/analytics/subjects/\" + roll + \"/\" + semList)\r\n            .then(res => res.json());\r\n        if (!subjectData.error) {\r\n            for (let key of [\"SM01\", \"SM02\", \"SM03\", \"SM04\", \"SM05\", \"SM06\", \"SM07\", \"SM08\"]) {\r\n                if (key in subjectData) {\r\n                    for (let subCode in subjectData[key]) {\r\n                        for (let i in subjectPercentileAnalyticsArray) {\r\n                            if (subjectPercentileAnalyticsArray[i].name === subCode) {\r\n                                subjectPercentileAnalyticsArray[i][roll + \"'s PCTL\"] =\r\n                                    this.getPercentile(subjectData[key][subCode], subjectPercentileAnalyticsArray[i][roll + \"'s CGPA\"])\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    async getData() {\r\n        this.setState({ fetchState: FETCHING, savedStudentList: this.state.studentList });\r\n        let semList = \"\";\r\n        let semesterProgressAnalyticsArray = [];\r\n        let subjectPercentileAnalyticsArray = [];\r\n        let nameMap = {};\r\n        for (const i in this.state.sems)\r\n            if (this.state.sems[i] === true) {\r\n                semList += (1 + parseInt(i)).toString();\r\n                semesterProgressAnalyticsArray.push({ \"name\": \"SM0\" + (1 + parseInt(i)).toString() })\r\n            }\r\n        let downloadTask = [];\r\n        for (let idx in this.state.studentList) {\r\n            downloadTask.push(this.getStudentStats(idx,semesterProgressAnalyticsArray,subjectPercentileAnalyticsArray, nameMap,semList));\r\n        }\r\n        await Promise.all(downloadTask);\r\n        this.setState({ nameMap: nameMap, fetchState: SHOWING_DATA, SubjectPAA: subjectPercentileAnalyticsArray, SemesterPAA: semesterProgressAnalyticsArray });\r\n        if (this.state.fetchState === SHOWING_DATA)\r\n            localStorage.setItem(\"Student_comparasion_state\", JSON.stringify(this.state))\r\n    }\r\n    chunkArray(arr, size) {\r\n        let arrayOfArrays = [];\r\n        for (var i = 0; i < arr.length; i += size) {\r\n            arrayOfArrays.push(arr.slice(i, i + size));\r\n        }\r\n        return arrayOfArrays;\r\n    }\r\n\r\n    render() {\r\n        let resultState;\r\n        switch (this.state.fetchState) {\r\n            case FETCHING:\r\n                resultState = \"button active\";\r\n                break;\r\n            case DONE_ALL:\r\n            case DONE_SCORE:\r\n                resultState = \"button finished\";\r\n                break;\r\n            default:\r\n                resultState = \"button\";\r\n        }\r\n        const semsBtn = sems.map((item, index) =>\r\n            <button key={index} className={(this.state.sems[index]) ? \"toggle on\" : \"toggle off\"} onClick={this.semsQueryHandler} item-id={index}>\r\n                {item}\r\n            </button>\r\n        );\r\n        return (\r\n            <div className=\"search\">\r\n                <ToastContainer />\r\n                <SearchBox\r\n                    title=\"Add student roll number.\"\r\n                    type={\"number\"}\r\n                    color={\"#FFFFFF\"}\r\n                    colorHint={\"#717171\"}\r\n                    spacing={(isMobile ? 3 : 8)}\r\n                    searchTextUpdate={this.searchTextUpdate}\r\n                    text={this.state.text}\r\n                    searchState={this.searchState} dataText={[\r\n                        \"30000118020\",\r\n                        \"19600128033\",\r\n                        \"10000119055\",\r\n                        \"11600118025\",\r\n                        \"11700119032\",\r\n                    ]}\r\n                    active={this.state.input}\r\n                />\r\n                {(this.state.input || this.state.text || this.state.studentList.length > 0) && (this.state.fetchState !== DONE_ALL || this.state.fetchState !== DONE_SCORE) && this.state.fetchState !== SHOWING_DATA &&\r\n                    <div className=\"toolbox\">\r\n                        {semsBtn}\r\n                    </div>\r\n                }\r\n                {this.state.text.length >= 11 &&\r\n                    <div className=\"toolbox\">\r\n                        <div className=\"toolbox\"></div>\r\n                        <button className={resultState} onClick={this.addStudent}>\r\n                            <span className=\"submit\">Add</span>\r\n                            <span className=\"loading\"><img src={updateIcon} alt=\"\" /></span>\r\n                            <span className=\"check\"><img src={tickIcon} alt=\"\" /></span>\r\n                        </button>\r\n                    </div>\r\n                }\r\n                {this.state.studentList.length > 0 &&\r\n                    <SearchList\r\n                        filterText={'0'}\r\n                        list={this.state.studentList}\r\n                        allAlwaysSelected={true}\r\n                        ItemClickUpdate={this.ItemClickUpdate}\r\n                        hideGradient={this.state.fetchState === DONE_ALL} />\r\n                }\r\n                {this.state.studentList.length > 0 && this.checkAnySemList() && this.state.fetchState !== SHOWING_DATA &&\r\n                    <div className=\"toolbox\">\r\n                        <button className={resultState} onClick={this.getData}>\r\n                            <span className=\"submit\">Show Comparision</span>\r\n                            <span className=\"loading\"><img src={updateIcon} alt=\"\" /></span>\r\n                            <span className=\"check\"><img src={tickIcon} alt=\"\" /></span>\r\n                        </button>\r\n                    </div>\r\n                }\r\n                <div className=\"resultbox\"></div>\r\n                <div className=\"resultbox\"></div>\r\n                {this.state.fetchState === SHOWING_DATA &&\r\n                    <div className=\"resultbox\">\r\n                        <ResponsiveContainer width=\"90%\" height={400}>\r\n                            <ComposedChart\r\n                                width={360}\r\n                                height={300}\r\n                                data={this.state.SemesterPAA}\r\n                            >\r\n                                <XAxis dataKey=\"name\" />\r\n                                <Tooltip formatter={(v, k, i) => [(k.endsWith('CGPA')) ? (v / 10).toFixed(2) : v + \"%\", k]} />\r\n                                <Legend />\r\n                                {\r\n                                    this.state.savedStudentList.map((v, k) => {\r\n                                        return (\r\n                                            <Bar name={this.state.nameMap[v] + \"'s CGPA\"} key={k + \"bar\"} type=\"linear\" dataKey={v + \"'s CGPA\"} fill={colors[(k+ offset) % colors.length] + 'AA'} />\r\n                                        )\r\n                                    })\r\n                                }\r\n                                {\r\n                                    this.state.savedStudentList.map((v, k) => {\r\n                                        return (\r\n                                            <Line name={this.state.nameMap[v] + \"'s Percentile\"} key={k + 'line'} type=\"linear\" strokeWidth={3} dataKey={v + \"'s PCTL\"} stroke={colors[(k + offset) % colors.length]} />\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ComposedChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                }\r\n                {this.state.fetchState === SHOWING_DATA &&\r\n                    <div className=\"resultbox\">\r\n                        {(this.chunkArray(this.state.SubjectPAA, 4)).map((subArr, key) => {\r\n                            return (\r\n                                <div >\r\n                                    <div style={{ display: \"block\", Height: \"400px\" }}>\r\n                                        <ResponsiveContainer width={360} height={300}>\r\n                                            <BarChart\r\n                                                width={500}\r\n                                                data={subArr}\r\n                                            >\r\n                                                <XAxis dataKey=\"name\" />\r\n                                                <Tooltip formatter={(v, k, i) => [(k.endsWith('CGPA')) ? (v / 10).toFixed(2) : v + \"%\", k]} />\r\n                                                {key == (this.state.SubjectPAA.length/4) -1 && <Legend />}\r\n                                                {\r\n                                                    this.state.savedStudentList.map((v, k) => {\r\n                                                        return (\r\n                                                            <Bar stackId={v} name={this.state.nameMap[v].split(' ')[0] + \"'s CGPA\"} key={k + \"bar\"} type=\"linear\" dataKey={v + \"'s CGPA\"} fill={colors[(k + offset) % colors.length] + 'AA'} />\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                {\r\n                                                    this.state.savedStudentList.map((v, k) => {\r\n                                                        return (\r\n                                                            <Bar stackId={v} name={this.state.nameMap[v].split(' ')[0] + \"'s Percentile\"} key={k + 'line'} type=\"linear\" strokeWidth={3} dataKey={v + \"'s PCTL\"} fill={colors[(k + offset )% colors.length]} />\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </BarChart>\r\n                                        </ResponsiveContainer>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    </div>\r\n                }</div>)\r\n    }\r\n    checkAnySemList() {\r\n        for (const i in this.state.sems)\r\n            if (this.state.sems[i] === true)\r\n                return true;\r\n        return false;\r\n    }\r\n}\r\nexport default StudentCompare;","import { Component } from \"react\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport colleges, { API_HOST, subCodes } from \"../../Database/db\";\r\nimport SearchBox from \"../SearchBox/SearchBox\";\r\nimport SearchList from \"../SearchList/SearchList\";\r\nimport updateIcon from \"../ToggleButton/sync.svg\";\r\nimport tickIcon from \"../ToggleButton/done.svg\";\r\nimport infoIcon from \"../CollegeReport/icons/info.svg\";\r\n\r\nimport { Bar, BarChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\r\nimport { Fragment } from \"react/cjs/react.production.min\";\r\n\r\nconst IDLE = 0;\r\nconst DONE = 10;\r\nconst FETCHING = 1;\r\nconst DONE_SCORE = 2;\r\nconst DONE_ALL = 4;\r\nclass SubjectReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ItemClickUpdate = this.ItemClickUpdate.bind(this);\r\n        this.searchState = this.searchState.bind(this);\r\n        this.searchTextUpdate = this.searchTextUpdate.bind(this);\r\n        this.getData = this.getData.bind(this);\r\n        this.selectSem = this.selectSem.bind(this);\r\n        this.textFilter = this.textFilter.bind(this);\r\n        let savedState = JSON.parse(localStorage.getItem(\"subjectData\") || \"{}\");\r\n        if (JSON.stringify(savedState) !== \"{}\")\r\n            this.state = savedState;\r\n        else\r\n            this.state = { text: \"\", input: false, semList: [], textFilter: \"\" }\r\n    }\r\n    ItemClickUpdate(selectedSubject, isSelected) {\r\n        selectedSubject = Object.keys(subCodes)[selectedSubject]\r\n        //console.log(subCodes[selectedSubject], selectedSubject);\r\n        if (isSelected)\r\n            this.setState(() => ({ text: \"\", selectedSubject: selectedSubject, semList: subCodes[selectedSubject], selectedSem: subCodes[selectedSubject][0] }));\r\n        else\r\n            this.setState(() => ({ text: \"\", selectedSubject: null, semList: [], fetchState: IDLE }));\r\n    }\r\n    selectSem(e) {\r\n        this.setState({ selectedSem: e.target.value });\r\n    }\r\n    getData() {\r\n        let subCode = this.state.selectedSubject;\r\n        let sem = this.state.selectedSem;\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"subCode\", subCode);\r\n        urlencoded.append(\"sem\", sem);\r\n        this.setState({ fetchState: FETCHING });\r\n        fetch(API_HOST + '/subjectReport', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            },\r\n            body: urlencoded\r\n        }).then(res => res.json()).then(data => {\r\n            this.setState({ fetchState: DONE_ALL, data: data, text: subCode });\r\n            localStorage.setItem(\"subjectData\", JSON.stringify(this.state));\r\n        });\r\n    }\r\n    textFilter(e) {\r\n        this.setState({ textFilter: e.target.value });\r\n    }\r\n    searchState(isActive) {\r\n        let apiState = this.state.fetchState;\r\n        if (apiState !== FETCHING)\r\n            apiState = IDLE;\r\n        this.setState(() => ({ input: isActive, fetchState: apiState }));\r\n    }\r\n    searchTextUpdate(text) {\r\n        this.setState(() => ({ text: text, fetchState: IDLE }));\r\n    }\r\n    checkTextFilter(text) {\r\n        let containText = true;\r\n        if (this.state.textFilter && this.state.textFilter.length > 0) {\r\n            let filterArray = this.state.textFilter.split(\" \");\r\n            for (let filter of filterArray) {\r\n                if (filter.length > 0) {\r\n                    if (text.toLocaleLowerCase().search(filter.replace(/[#-.]|[[-^]|[?|{}]/g, '\\\\$&').toLocaleLowerCase()) == -1) {\r\n                        containText = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return containText;\r\n    }\r\n    boderStyle = { borderRadius: \"12px\", padding: \"16px\" };\r\n    render() {\r\n        let resultState;\r\n        switch (this.state.fetchState) {\r\n            case FETCHING:\r\n                resultState = \"button active\";\r\n                break;\r\n            case DONE_ALL:\r\n            case DONE_SCORE:\r\n                resultState = \"button finished\";\r\n                break;\r\n            default:\r\n                resultState = \"button\";\r\n        }\r\n        return (\r\n            <div className=\"search\">\r\n                <ToastContainer />\r\n                {!this.state.selectedSubject &&\r\n                    <SearchBox title={\"Enter Subject Code\"}\r\n                        color={\"#FFFFFF\"}\r\n                        colorHint={\"#717171\"}\r\n                        spacing={(isMobile ? 1 : 2)}\r\n                        maxLength={100}\r\n                        searchTextUpdate={this.searchTextUpdate}\r\n                        text={this.state.text}\r\n                        searchState={this.searchState} dataText={Object.keys(subCodes)}\r\n                        active={this.state.input} />\r\n                }\r\n                <SearchList\r\n                    filterText={this.state.text}\r\n                    list={Object.keys(subCodes)}\r\n                    ItemClickUpdate={this.ItemClickUpdate}\r\n                    maxSelection={1}\r\n                    hideGradient={this.state.fetchState == DONE} />\r\n                {this.state.semList.length > 0 &&\r\n                    <div className=\"toolbox\">\r\n                        <span style={{ display: \"inline\", margin: \"auto 0\", fontFamily: \"'Open Sans', cursive\" }}>Semester</span>\r\n                        <select style={this.boderStyle} onChange={this.selectSem} style={this.boderStyle} value={this.state.selectedSem} disabled={this.state.semList.length == 1}>\r\n                            {this.state.semList.map(sem => {\r\n                                return <option key={sem} value={sem}>{\"sem \"+sem[3]}</option>\r\n                            })}\r\n                        </select>\r\n                        {this.state.data &&\r\n                            <Fragment>\r\n                                <span>  </span>\r\n                                <span style={{ display: \"inline\", margin: \"auto 40px auto 0\", fontFamily: \"'Open Sans', cursive\" }}>Filter by</span>\r\n                                <input onChange={this.textFilter} style={{ border: \"none\", minWidth: \"50%\", borderRadius: \"12px\", padding: \"8px\" }}></input>\r\n                            </Fragment>\r\n                        }\r\n                    </div>\r\n                }\r\n                {this.state.selectedSubject &&\r\n                    <div className=\"toolbox\">\r\n                        <button className={resultState} onClick={this.getData}>\r\n                            <span className=\"submit\">Show Data</span>\r\n                            <span className=\"loading\"><img src={updateIcon} alt=\"\" /></span>\r\n                            <span className=\"check\"><img src={tickIcon} alt=\"\" /></span>\r\n                        </button>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.data &&\r\n                    <div className=\"resultbox\">\r\n                        {Object.keys(this.state.data).map(college => {\r\n                            return (\r\n                                this.checkTextFilter(colleges[college]) ?\r\n                                    <div key={college} className=\"gradecard\" style={{ width: \"auto\" }}>\r\n                                        <h3>{colleges[college]}</h3>\r\n                                        {Object.keys(this.state.data[college]).map(batch => {\r\n                                            return (\r\n                                                <div key={batch + college} style={{ display: \"block\", Height: \"400px\" }}>\r\n                                                    <span>{\"20\" + batch}</span>\r\n                                                    <ResponsiveContainer width={360} height={300}>\r\n                                                        <BarChart\r\n                                                            width={500}\r\n                                                            data={this.state.data[college][batch].CGPA_DATA}>\r\n                                                            <XAxis height={60} label={{ value: \"CGPA\", position: \"outsideTopMiddle\", dx: 0, dy: 13 }} />\r\n                                                            <YAxis dataKey=\"\" />\r\n                                                            <Bar name=\"Students\" dataKey=\"count\" />\r\n                                                            <Tooltip />\r\n                                                        </BarChart>\r\n                                                    </ResponsiveContainer>\r\n                                                    <div className=\"badge mxw300\">\r\n                                                        <img src={infoIcon}></img>\r\n                                                        <p>Average: <bold>{this.state.data[college][batch].AVERAGE_CGPA}</bold><br></br> standard deviation <bold>{this.state.data[college][batch].STANDARD_DEVIATION}</bold> </p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                        }\r\n                                    </div> : null\r\n                            )\r\n                        })\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SubjectReport;\r\n","import { useState } from 'react';\r\nimport './settings.scss'\r\nimport { Icon } from '@iconify/react';\r\nimport { SERVER1, SERVER2, setHost, SELECTED_SERVER, HTTP_METHOD, API_HOST } from '../../Database/db';\r\nfunction Settings(props) {\r\n    let savedServer = localStorage.getItem(SELECTED_SERVER);\r\n    if (savedServer != SERVER1 && savedServer != SERVER2) {\r\n        if (API_HOST.endsWith(SERVER1))\r\n            savedServer = SERVER1;\r\n        else\r\n            savedServer = SERVER2;\r\n    }\r\n    const [server, setServer] = useState(savedServer);\r\n    function selectServer(host) {\r\n        setHost(host);\r\n        localStorage.setItem(SELECTED_SERVER, host);\r\n        setServer(host);\r\n    }\r\n    const [input, setInput] = useState(localStorage.getItem('custom_server') || SERVER2);\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"snip1265\">\r\n                <div className={\"plan \" + (server == SERVER1 ? \"featured\" : \"\")}>\r\n                    <header><i><Icon icon=\"mdi:aws\" color=\"#f39c12\" /></i>\r\n                        <h4 className=\"plan-title\">\r\n                            Primary Servers\r\n                        </h4>\r\n                        <div className=\"plan-cost\"><span className=\"plan-type\">host </span><span className=\"plan-price\">prasannathapa.in</span></div>\r\n                    </header>\r\n                    <ul className=\"plan-features\">\r\n                        <li><a style={{ fontFamily: 'monospace' }}>{HTTP_METHOD + SERVER1}</a>\r\n                        </li>\r\n                        <li> Fastest feature updates (if any)\r\n                        </li>\r\n                        <li> unlimited timeout<br></br>(no skiping queires if takes longer then 30sec)\r\n                        </li>\r\n                        <li> Unlimited API calls\r\n                        </li>\r\n                        <li> Tested and reliable\r\n                        </li>\r\n                        <li> It costs me, so if I go broke this will go down\r\n                        </li>\r\n                        <li> AWS Servers\r\n                        </li>\r\n                    </ul>\r\n                    {server == SERVER1 ?\r\n                        <div className=\"plan-select\"><a style={{ background: \"black\" }}>SELECTED</a></div>\r\n                        :\r\n                        <div className=\"plan-select\" onClick={() => selectServer(SERVER1)}><a>Select server</a></div>\r\n                    }\r\n                </div>\r\n\r\n                <div className={\"plan \" + (server == SERVER2 ? \"featured\" : \"\")}>\r\n                    <header><i><Icon icon=\"la:node-js\" color=\"#f39c12\" /></i>\r\n                        <h4 className=\"plan-title\">\r\n                            Custom Servers\r\n                        </h4>\r\n                        <div className=\"plan-cost\"><span className=\"plan-type\">host </span><span className=\"plan-price\"><input id={'input'} value={input} onInput={e => setInput(e.target.value)} /></span></div>\r\n                    </header>\r\n                    <ul className=\"plan-features\">\r\n                        <li><a style={{ fontFamily: 'monospace' }}>{HTTP_METHOD + SERVER2}</a>\r\n                        </li>\r\n                        <li> Use your own server \r\n                        </li>\r\n                        <li> Customise <br></br>(the way you want)\r\n                        </li>\r\n                        <li> Set your won restrictions API calls\r\n                        </li>\r\n                        <li> Keep your data private\r\n                        </li>\r\n                        <li> We both go broke then only its down\r\n                        </li>\r\n                        <li> you can use a super computer if you want\r\n                        </li>\r\n                        \r\n                    </ul>\r\n                    {server == input ?\r\n                        <div className=\"plan-select\"><a style={{ background: \"black\" }}>SELECTED</a></div>\r\n                        :\r\n                        <div className=\"plan-select\" onClick={() => selectServer(input)}><a>Select server</a></div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div> </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import './App.scss';\r\nimport React, { Fragment } from 'react';\r\nimport Drawer from './components/Drawer/drawer';\r\nimport Main from './components/Drawer/Main';\r\nimport iconCard from './components/Drawer/icons/reportcard.svg'\r\nimport iconCollege from './components/Drawer/icons/college.svg'\r\nimport iconAI from './components/Drawer/icons/ai.svg'\r\nimport iconCompare from './components/Drawer/icons/compare.svg'\r\nimport iconFaq from './components/Drawer/icons/faq.svg'\r\nimport iconServer from './components/Drawer/icons/server.svg'\r\nimport iconHome from './components/Drawer/icons/home.svg'\r\nimport iconBook from './components/Drawer/icons/book.svg'\r\nimport iconSearch from './components/Drawer/icons/search.svg'\r\nimport MultiReport from './components/MultiReport/MultiReport'\r\nimport Student from './components/Student/Student';\r\nimport { isMobile } from 'react-device-detect';\r\nimport Home from './components/Home/Home';\r\nimport NotImplemented from './components/UnderConstruction';\r\nimport CollegeReport from './components/CollegeReport/CollegeReport';\r\nimport StudentCompare from './components/StudentCompare/StudentCompare';\r\nimport SubjectReport from './components/SubjectReport/SubjectReport';\r\nimport Settings from './components/Settings/Settings';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isOpen: !isMobile, itemSelected: '0', animate: false };\r\n    this.toggleDrawer = this.toggleDrawer.bind(this);\r\n\r\n    this.list = [\r\n      [\"Home\", iconHome],\r\n      [\"Student Report\", iconSearch],\r\n      [\"Multi Report\", iconCard],\r\n      [\"College Report\", iconCollege],\r\n      [\"Subject Report\", iconBook],\r\n      [\"Compare Student\", iconCompare],\r\n      [\"Predict\", iconAI],\r\n      [\"Server\", iconServer]]\r\n    this.navItemClickListner = this.navItemClickListner.bind(this);\r\n    if (localStorage.getItem(\"ver\") !== \"1.15\")\r\n      localStorage.clear();\r\n    localStorage.setItem(\"ver\", \"1.15\")\r\n  }\r\n  navItemClickListner(id) {\r\n    //console.log(\"Menu Selected: \" + id);\r\n    let drawerState = this.state.isOpen, animate = false;\r\n    if (drawerState && isMobile) {\r\n      drawerState = false;\r\n      animate = true;\r\n    }\r\n    this.setState(currentState => {\r\n      return { itemSelected: id, animate: isMobile ? animate : false, isOpen: drawerState };\r\n    });\r\n  }\r\n  toggleDrawer(e) {\r\n    this.setState(prevState => ({ isOpen: !prevState.isOpen, animate: true }));\r\n  }\r\n\r\n  render() {\r\n    let mainComp = <NotImplemented />;\r\n    switch (this.state.itemSelected) {\r\n      case '0':\r\n        mainComp = <Home />\r\n        break;\r\n      case '1':\r\n        mainComp = <Student text=\"\" />\r\n        break;\r\n      case '2':\r\n        mainComp = <MultiReport />\r\n        break;\r\n      case '3':\r\n        mainComp = <CollegeReport />\r\n        break;\r\n      case '4':\r\n        mainComp = <SubjectReport />\r\n        break;\r\n      case '5':\r\n        mainComp = <StudentCompare />\r\n        break;\r\n      case '7':\r\n        mainComp = <Settings />\r\n        break;\r\n      default:\r\n        //console.log(this.state.itemSelected, \"coming soon\");\r\n    }\r\n    //console.log(\"Animate: \" + this.state.animate);\r\n    return (\r\n      <Fragment>\r\n        <Drawer width={280} list={this.list} navItemClickListner={this.navItemClickListner} open={this.state.isOpen} activeId={this.state.itemSelected}></Drawer>\r\n        <Main width={280} open={this.state.isOpen} toggler={this.toggleDrawer} animate={this.state.animate}>\r\n          {mainComp}\r\n        </Main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}